"use strict";(self.webpackChunkdevoyage_web=self.webpackChunkdevoyage_web||[]).push([[3634],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),l=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=l(e.components);return n.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=l(r),m=a,f=d["".concat(p,".").concat(m)]||d[m]||u[m]||o;return r?n.createElement(f,i(i({ref:t},c),{},{components:r})):n.createElement(f,i({ref:t},c))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},5885:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var n=r(7462),a=(r(7294),r(3905));const o={id:"examples-http",title:"Simple HTTP"},i=void 0,s={unversionedId:"examples/examples-http",id:"examples/examples-http",title:"Simple HTTP",description:"",source:"@site/subgraph/12-examples/05-http.md",sourceDirName:"12-examples",slug:"/examples/examples-http",permalink:"/subgraph/examples/examples-http",draft:!1,editUrl:"https://www.github.com/The-Devoyage/devoyage-web/blob/master/subgraph/12-examples/05-http.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{id:"examples-http",title:"Simple HTTP"},sidebar:"subgraphSidebar",previous:{title:"Simple Postgres",permalink:"/subgraph/examples/examples-postgres"},next:{title:"Mixed Data Sources",permalink:"/subgraph/examples/examples-mixed-data-sources"}},p={},l=[],c={toc:l};function u(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-toml"},'[service]\nname = "todos"\n\n# Define the HTTP Data Source\n[[service.data_sources]]\n[service.data_sources.HTTP]\nname = "todos"\nurl = "https://jsonplaceholder.typicode.com"\n\n\n# Define the Entity\n[[service.entities]]\nname = "todo"\n\n# Define Unique Endpoints and Input Mapping\n[service.entities.data_source]\nfrom = "todos"\npath = "/todos"\n[service.entities.data_source.resolvers]\n[service.entities.data_source.resolvers.find_one]\npath = "/:id"\n[service.entities.data_source.resolvers.find_many]\nsearch_query = [["userId", ":userId"], ["completed", ":completed"], ["id", ":id"]]\n# No need to define options for create_one, as it will use the default endpoint from the data source, "/todos"\n# [service.entities.data_source.resolvers.create_one]\n# path = "/"\n\n[[service.entities.fields]]\nname = "userId"\nscalar = "Int"\nrequired = true\n[[service.entities.fields]]\nname = "id"\nscalar = "Int"\nrequired = true\n[[service.entities.fields]]\nname = "title"\nscalar = "String"\nrequired = true\n[[service.entities.fields]]\nname = "completed"\nscalar = "Boolean"\nrequired = true\n')))}u.isMDXComponent=!0}}]);