"use strict";(self.webpackChunkdevoyage_web=self.webpackChunkdevoyage_web||[]).push([[9067],{3473:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var t=r(4848),n=r(8453);const i={id:"entity-data-source-resolvers",title:"Resolvers Specific Options"},a=void 0,o={id:"entities/entity-data-source/entity-data-source-resolvers",title:"Resolvers Specific Options",description:"Entity Resolver Configuration",source:"@site/subgraph/05-entities/05-entity-data-source/03-resolvers.md",sourceDirName:"05-entities/05-entity-data-source",slug:"/entities/entity-data-source/entity-data-source-resolvers",permalink:"/subgraph/entities/entity-data-source/entity-data-source-resolvers",draft:!1,unlisted:!1,editUrl:"https://www.github.com/The-Devoyage/devoyage-web/blob/master/subgraph/05-entities/05-entity-data-source/03-resolvers.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{id:"entity-data-source-resolvers",title:"Resolvers Specific Options"},sidebar:"subgraphSidebar",previous:{title:"Tables, Collections, and Paths",permalink:"/subgraph/entities/entity-data-source/table-collection-path"},next:{title:"Required Entities",permalink:"/subgraph/entities/required-entities"}},d={},c=[{value:"Entity Resolver Configuration",id:"entity-resolver-configuration",level:2},{value:"Resolvers and Options",id:"resolvers-and-options",level:2},{value:"Resolver Guards",id:"resolver-guards",level:3},{value:"Search Query",id:"search-query",level:3},{value:"Path",id:"path",level:3},{value:"Method",id:"method",level:3}];function l(e){const s={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h2,{id:"entity-resolver-configuration",children:"Entity Resolver Configuration"}),"\n",(0,t.jsxs)(s.p,{children:["Configuration that is specific to a resolver can be configured with the ",(0,t.jsx)(s.code,{children:"resolvers"})," property. This is useful when applying unique\nendoits for specific resolvers, or adding guards that should only be enforced for specific resolvers."]}),"\n",(0,t.jsx)(s.p,{children:"In GraphQL and Subgraph, a resolver is related to an action such as Finding, Creating, or Updating."}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-toml",children:'[[service.entities.data_source.resolvers.find_one.guards]]\nname = "require_access_user_uuid"\nif_expr = \'\'\'\n  !every(input("query", "access.user.uuid"), token_data("user_uuid"))\n\'\'\'\nthen_msg = "You do not have permission to view this task. Provide input value `acceess.user.uuid`."\n'})}),"\n",(0,t.jsx)(s.h2,{id:"resolvers-and-options",children:"Resolvers and Options"}),"\n",(0,t.jsx)(s.p,{children:"You may apply the following options to any of the available resolvers:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-toml",children:"# Find One Options\n[[service.entities.data_source.resolvers.find_one.guards]]\n\n# Find Many Options\n[[service.entities.data_source.resolvers.find_many.guards]]\n\n# Create One Options\n[[service.entities.data_source.resolvers.create_one.guards]]\n\n# Update One Options\n[[service.entities.data_source.resolvers.update_one.guards]]\n\n# Update Many Options\n[[service.entities.data_source.resolvers.update_many.guards]]\n"})}),"\n",(0,t.jsx)(s.h3,{id:"resolver-guards",children:"Resolver Guards"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.a,{href:"/subgraph/category/guards",children:"Guards"})," can be applied to specific resolvers, allowing you to have unique guards for unique actions."]}),"\n",(0,t.jsx)(s.h3,{id:"search-query",children:"Search Query"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.em,{children:"HTTP Data Sources Only"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-toml",children:'[service.entities.data_source.resolvers]\n[service.entities.data_source.resolvers.find_many]\nsearch_query = [["userId", ":userId"], ["completed", ":completed"]] #Append Search Query to Path for HTTP Data Sources.\n'})}),"\n",(0,t.jsx)(s.h3,{id:"path",children:"Path"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.em,{children:"HTTP Data Sources Only"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-toml",children:'[service.entities.data_source.resolvers]\n[service.entities.data_source.resolvers.find_one]\npath = "/:id"  # Converts the ID property from the GraphQL Input into the ID Path Parameter for HTTP Data Sources.\n'})}),"\n",(0,t.jsx)(s.h3,{id:"method",children:"Method"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.em,{children:"HTTP Data Sources Only"})}),"\n",(0,t.jsx)(s.p,{children:"Override the default applied method to a HTTP Resolver."}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-toml",children:'[service.entities.data_source.resolvers]\nmethod = "Post"\n'})})]})}function u(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,s,r)=>{r.d(s,{R:()=>a,x:()=>o});var t=r(6540);const n={},i=t.createContext(n);function a(e){const s=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),t.createElement(i.Provider,{value:s},e.children)}}}]);