"use strict";(self.webpackChunkdevoyage_web=self.webpackChunkdevoyage_web||[]).push([[6132],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>g});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),l=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=l(r),g=a,m=c["".concat(p,".").concat(g)]||c[g]||d[g]||o;return r?n.createElement(m,s(s({ref:t},u),{},{components:r})):n.createElement(m,s({ref:t},u))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=c;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var l=2;l<o;l++)s[l]=r[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}c.displayName="MDXCreateElement"},5308:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var n=r(7462),a=(r(7294),r(3905));const o={id:"guard-messages",title:"Error Messages"},s=void 0,i={unversionedId:"guards/guard-messages",id:"guards/guard-messages",title:"Error Messages",description:"Explaining the Problem",source:"@site/subgraph/07-guards/04-then_msg.md",sourceDirName:"07-guards",slug:"/guards/guard-messages",permalink:"/subgraph/guards/guard-messages",draft:!1,editUrl:"https://www.github.com/The-Devoyage/devoyage-web/blob/master/subgraph/07-guards/04-then_msg.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{id:"guard-messages",title:"Error Messages"},sidebar:"subgraphSidebar",previous:{title:"Expressions & Conditions",permalink:"/subgraph/guards/guard-expression"},next:{title:"Data Context",permalink:"/subgraph/guards/guard-data-context"}},p={},l=[{value:"Explaining the Problem",id:"explaining-the-problem",level:2}],u={toc:l};function d(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"explaining-the-problem"},"Explaining the Problem"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"required")),(0,a.kt)("p",null,"When a guard disables access it is required to describe the problem that was encountered. You can do this by providing a message for the ",(0,a.kt)("inlineCode",{parentName:"p"},"then_msg")," property."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-toml"},"[[entities.data_source.resolvers.update_one.guards]]\nname = \"not_found\"\nif_expr = '''\n  todo_id = context(\"todo.id\");\n  len(todo_id) == 0\n'''\n# Providing a message informs the user of the API what is wrong, so they may attempt to fix the problem themselves.\nthen_msg = \"Todo does not exist\"\n")),(0,a.kt)("p",null,"The provided message is injected as a key value pair in the response."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "not_found": "Todo does not exist"\n}\n')))}d.isMDXComponent=!0}}]);