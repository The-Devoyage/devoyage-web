"use strict";(self.webpackChunkdevoyage_web=self.webpackChunkdevoyage_web||[]).push([[8581],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>f});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},d=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=p(r),f=a,m=c["".concat(s,".").concat(f)]||c[f]||u[f]||i;return r?n.createElement(m,o(o({ref:t},d),{},{components:r})):n.createElement(m,o({ref:t},d))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}c.displayName="MDXCreateElement"},1936:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var n=r(7462),a=(r(7294),r(3905));const i={id:"upload-and-serve-files",title:"Upload and Serve Files"},o=void 0,l={unversionedId:"usage/upload-and-serve-files",id:"usage/upload-and-serve-files",title:"Upload and Serve Files",description:"Upload file to server",source:"@site/media/03-usage/02-upload-a-file.md",sourceDirName:"03-usage",slug:"/usage/upload-and-serve-files",permalink:"/media/usage/upload-and-serve-files",draft:!1,editUrl:"https://www.github.com/The-Devoyage/devoyage-web/blob/master/media/03-usage/02-upload-a-file.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"upload-and-serve-files",title:"Upload and Serve Files"},sidebar:"mailerSidebar",previous:{title:"Query The Server",permalink:"/media/usage/query-the-server"},next:{title:"File Storage",permalink:"/media/usage/file-storage"}},s={},p=[{value:"Upload file to server",id:"upload-file-to-server",level:2},{value:"Get Media Records",id:"get-media-records",level:2},{value:"Fetch Media Asset",id:"fetch-media-asset",level:2}],d={toc:p};function u(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"upload-file-to-server"},"Upload file to server"),(0,a.kt)("p",null,"Create a mutation request to the resolver 'singleFileUpload' with the following variables:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"export type SingleFileUploadInput = {\n  file: File;\n  title: string;\n};\n")),(0,a.kt)("h2",{id:"get-media-records"},"Get Media Records"),(0,a.kt)("p",null,"Once uploaded you can fetch ",(0,a.kt)("inlineCode",{parentName:"p"},"Media")," using the ",(0,a.kt)("inlineCode",{parentName:"p"},"getMedia")," query. Type ",(0,a.kt)("inlineCode",{parentName:"p"},"Media")," represents the record of the media in the mongodb, including the path."),(0,a.kt)("h2",{id:"fetch-media-asset"},"Fetch Media Asset"),(0,a.kt)("p",null,"Once you have the file path, the ",(0,a.kt)("inlineCode",{parentName:"p"},"graphql-media")," server can serve the file with a HTTP request. The default endpoint is ",(0,a.kt)("inlineCode",{parentName:"p"},"/uploads"),", but this can be configured in the ",(0,a.kt)("inlineCode",{parentName:"p"},"media_config.json")," file."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"const photoURI = `http://media_server:MEDIA_SERVER_PORT/${path}`;\n")))}u.isMDXComponent=!0}}]);