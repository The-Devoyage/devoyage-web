"use strict";(self.webpackChunkdevoyage_web=self.webpackChunkdevoyage_web||[]).push([[5940],{2283:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>r,toc:()=>d});var a=n(4848),o=n(8453);const s={id:"content-and-layouts",title:"Contents and Layouts"},i=void 0,r={id:"usage/content-and-layouts",title:"Contents and Layouts",description:"If you want to use triggered content, you must create a content using the graphql api on this server.",source:"@site/mailer/03-usage/04-content-and-layouts.md",sourceDirName:"03-usage",slug:"/usage/content-and-layouts",permalink:"/mailer/usage/content-and-layouts",draft:!1,unlisted:!1,editUrl:"https://www.github.com/The-Devoyage/devoyage-web/blob/master/mailer/03-usage/04-content-and-layouts.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{id:"content-and-layouts",title:"Contents and Layouts"},sidebar:"mailerSidebar",previous:{title:"Triggered Content",permalink:"/mailer/usage/triggered-content"}},l={},d=[{value:"Content",id:"content",level:3},{value:"Layouts",id:"layouts",level:3}];function c(e){const t={code:"code",h3:"h3",li:"li",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.p,{children:"If you want to use triggered content, you must create a content using the graphql api on this server."}),"\n",(0,a.jsx)(t.h3,{id:"content",children:"Content"}),"\n",(0,a.jsxs)(t.p,{children:["Content are pre-designed HTML that can be sent as standalone emails or be dynamically inserted into pre-designed HTML ",(0,a.jsx)(t.code,{children:"Layout"}),"s."]}),"\n",(0,a.jsx)(t.p,{children:"From the GraphQL Playground/Sandbox you can manipulate content:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"Create Content"}),"\n",(0,a.jsx)(t.li,{children:"Update Content"}),"\n",(0,a.jsx)(t.li,{children:"Delete Content"}),"\n",(0,a.jsx)(t.li,{children:"Get Content"}),"\n"]}),"\n",(0,a.jsx)(t.h3,{id:"layouts",children:"Layouts"}),"\n",(0,a.jsxs)(t.p,{children:["Layouts are pre-designed HTML templates that are saved to the GraphQL Mailer Database. Layouts do not contain dynamic variables, but can be injected with ",(0,a.jsx)(t.code,{children:"Content"}),", which is described below. Layouts MUST can contain a variable, ",(0,a.jsx)(t.code,{children:"{{content}}"})," which will allow a Content to be injected into the template."]}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsx)(t.p,{children:"Create Layout - Admins are able to create layouts. Requires User Role of 1."}),"\n"]}),"\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsx)(t.p,{children:"Get Layouts - Get a paginated and filterable list of layouts."}),"\n"]}),"\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsx)(t.p,{children:"Update Layout - Admins are able to update layouts. Requires user role of 1."}),"\n"]}),"\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsx)(t.p,{children:"Delete Layout - Admins are able to delete layouts. Requires user role of 1."}),"\n"]}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>r});var a=n(6540);const o={},s=a.createContext(o);function i(e){const t=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),a.createElement(s.Provider,{value:t},e.children)}}}]);