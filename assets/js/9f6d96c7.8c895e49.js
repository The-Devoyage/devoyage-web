"use strict";(self.webpackChunkdevoyage_web=self.webpackChunkdevoyage_web||[]).push([[2919],{2339:e=>{e.exports=JSON.parse('{"pluginId":"users","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"usersSidebar":[{"type":"link","label":"GraphQL Users","href":"/users/intro","docId":"intro","unlisted":false},{"type":"link","label":"Setup The Users Server","href":"/users/setup","docId":"setup","unlisted":false},{"type":"category","label":"usage","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Query The Server","href":"/users/usage/query-the-server","docId":"usage/query-the-server","unlisted":false},{"type":"link","label":"Initial Login","href":"/users/usage/initial-login","docId":"usage/initial-login","unlisted":false},{"type":"link","label":"Query Users","href":"/users/usage/query-users","docId":"usage/query-users","unlisted":false},{"type":"link","label":"Memberships","href":"/users/usage/memberships","docId":"usage/memberships","unlisted":false},{"type":"link","label":"Create Admin Role","href":"/users/usage/create-admin-role","docId":"usage/create-admin-role","unlisted":false}]},{"type":"html","value":"<a target=\\"_blank\\" href=\\"https://thedevoyage.gumroad.com/l/graphql-users\\"><button class=\\"button button--primary button--block margin-vert--sm\\">Purchase MIT License</button></a>"},{"type":"html","value":"<a target=\\"_blank\\" href=\\"https://thedevoyage.gumroad.com/l/graphql-users\\"><button class=\\"button button--success button--block\\">Support The Project</button>"}]},"docs":{"intro":{"id":"intro","title":"GraphQL Users","description":"The Devoyage\'s graphql-users repository is a production ready \\"Users and Memberships\\" Micro Service used to start or extend any API. Enable features such as User Management, User Details, Account Memberships, and Roles simply by spinning up this service, or use it as a starter with custom modifications to fit your needs.","sidebar":"usersSidebar"},"setup":{"id":"setup","title":"Setup The Users Server","description":"Clone The Repository","sidebar":"usersSidebar"},"usage/create-admin-role":{"id":"usage/create-admin-role","title":"Create Admin Role","description":"To create an admin user you must have access to the Mongo DB instance as this API does not create admin users by default. Once you have access to the mongo database, simply change the user\'s membership role to 1, the admin role.","sidebar":"usersSidebar"},"usage/initial-login":{"id":"usage/initial-login","title":"Initial Login","description":"Use the resolver, loginUser, to login a known or unknown user.","sidebar":"usersSidebar"},"usage/memberships":{"id":"usage/memberships","title":"Memberships","description":"Users may manage multiple accounts within the API. Each account that the user may access shows up in the memberships property of user document.","sidebar":"usersSidebar"},"usage/query-the-server":{"id":"usage/query-the-server","title":"Query The Server","description":"Querying this server is easy and only requires a single header to be present with each request.","sidebar":"usersSidebar"},"usage/query-users":{"id":"usage/query-users","title":"Query Users","description":"There are two provided resolvers that may be used to query for users including getUsers and me. The getUsers resolver returns a paginated and filterable list of users while the me resolver returns the user document of the authorized user.","sidebar":"usersSidebar"}}}')}}]);