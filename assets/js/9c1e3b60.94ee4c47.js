"use strict";(self.webpackChunkdevoyage_web=self.webpackChunkdevoyage_web||[]).push([[5706],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=o.createContext({}),c=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return o.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||r;return n?o.createElement(f,i(i({ref:t},p),{},{components:n})):o.createElement(f,i({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<r;c++)i[c]=n[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4960:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var o=n(7462),a=(n(7294),n(3905));const r={id:"table-collection-path",title:"Tables, Collections, and Paths"},i=void 0,l={unversionedId:"entities/entity-data-source/table-collection-path",id:"entities/entity-data-source/table-collection-path",title:"Tables, Collections, and Paths",description:"In addition to configuring which data source the entity comes from, the entity's data_source configuration allows you to",source:"@site/subgraph/05-entities/05-entity-data-source/02-table-collection.md",sourceDirName:"05-entities/05-entity-data-source",slug:"/entities/entity-data-source/table-collection-path",permalink:"/subgraph/entities/entity-data-source/table-collection-path",draft:!1,editUrl:"https://www.github.com/The-Devoyage/devoyage-web/blob/master/subgraph/05-entities/05-entity-data-source/02-table-collection.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"table-collection-path",title:"Tables, Collections, and Paths"},sidebar:"subgraphSidebar",previous:{title:"Sourcing an Entity",permalink:"/subgraph/entities/entity-data-source/entity-data-source-from"},next:{title:"Resolvers Specific Options",permalink:"/subgraph/entities/entity-data-source/entity-data-source-resolvers"}},s={},c=[{value:"Databases - Mongo and SQL",id:"databases---mongo-and-sql",level:2},{value:"Collection - Mongo",id:"collection---mongo",level:3},{value:"Table - SQL",id:"table---sql",level:3},{value:"HTTP - Custom Endpoints",id:"http---custom-endpoints",level:2}],p={toc:c};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"In addition to configuring which data source the entity comes from, the entity's ",(0,a.kt)("inlineCode",{parentName:"p"},"data_source")," configuration allows you to\nspecify which table(SQL), collection(Mongo), or endpoint (HTTP) to use when resolving an entity."),(0,a.kt)("h2",{id:"databases---mongo-and-sql"},"Databases - Mongo and SQL"),(0,a.kt)("p",null,"By default, Subgraph uses the name of the entity as the table or collection name when working\nwith a database. The ",(0,a.kt)("inlineCode",{parentName:"p"},"table")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"collection")," properties allow you to map an entity\nto a specific collection or table within a database."),(0,a.kt)("h3",{id:"collection---mongo"},"Collection - Mongo"),(0,a.kt)("p",null,"The following entity will be sourced from the ",(0,a.kt)("inlineCode",{parentName:"p"},"users")," collection when performing queries or mutations."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-toml"},'[[service.entities]]\nname = "Person"\n\n[service.entities.data_source]\nfrom = "mongo_1"\ncollection = "users"\n')),(0,a.kt)("h3",{id:"table---sql"},"Table - SQL"),(0,a.kt)("p",null,"The following eneity will be sourced from the ",(0,a.kt)("inlineCode",{parentName:"p"},"bow_wow")," table when performing queries or mutations."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-toml"},'[[service.entities]]\nname = "Dog"\n\n[service.entities.data_source]\nfrom = "sql_ds"\ntable = "bow_wow"\n')),(0,a.kt)("h2",{id:"http---custom-endpoints"},"HTTP - Custom Endpoints"),(0,a.kt)("p",null,"HTTP Data Sources work a bit different than a Data Source that connects to a database."),(0,a.kt)("p",null,"HTTP Data Sources allow you to connect to a third party restful API and often require a custom endpoint for\neach action or entity defined."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"path")," property allows you to map an endpoint to an entity, with the default path of ",(0,a.kt)("inlineCode",{parentName:"p"},"/"),". The following\nconfiguration will append the ",(0,a.kt)("inlineCode",{parentName:"p"},"/todos")," endpoint to every request for this entity."),(0,a.kt)("p",null,"The following will generate the url ",(0,a.kt)("inlineCode",{parentName:"p"},"http://myapi.com/todos"),", for example."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-toml"},'[service.entities.data_source]\nfrom = "todos"\npath = "/todos"\n')))}u.isMDXComponent=!0}}]);