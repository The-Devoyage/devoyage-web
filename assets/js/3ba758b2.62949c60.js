"use strict";(self.webpackChunkdevoyage_web=self.webpackChunkdevoyage_web||[]).push([[3563],{3439:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>c,frontMatter:()=>a,metadata:()=>o,toc:()=>d});var n=i(4848),r=i(8453);const a={id:"virtual-fields",title:"Virtual Fields"},s=void 0,o={id:"entities/fields/virtual-fields",title:"Virtual Fields",description:"The is_virtual Field Configuration",source:"@site/subgraph/05-entities/02-fields/12-virtual-fields.md",sourceDirName:"05-entities/02-fields",slug:"/entities/fields/virtual-fields",permalink:"/subgraph/entities/fields/virtual-fields",draft:!1,unlisted:!1,editUrl:"https://www.github.com/The-Devoyage/devoyage-web/blob/master/subgraph/05-entities/02-fields/12-virtual-fields.md",tags:[],version:"current",sidebarPosition:12,frontMatter:{id:"virtual-fields",title:"Virtual Fields"},sidebar:"subgraphSidebar",previous:{title:"Default Values",permalink:"/subgraph/entities/fields/default-values"},next:{title:"Primary Keys",permalink:"/subgraph/entities/fields/primary-keys"}},l={},d=[{value:"The <code>is_virtual</code> Field Configuration",id:"the-is_virtual-field-configuration",level:2}];function u(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.h2,{id:"the-is_virtual-field-configuration",children:["The ",(0,n.jsx)(t.code,{children:"is_virtual"})," Field Configuration"]}),"\n",(0,n.jsx)(t.p,{children:"Virtual fields are properties of an entity that do not exist within the data source and\ncan be useful in variety of circumstances."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-toml",children:'[[entities]]\nname = "todo_access"\nrequired = true\nfields = [\n  { name = "id", scalar = "Int", required = true, exclude_from_input = ["All"] },\n  { name = "uuid", scalar = "UUID", required = true, exclude_from_input = ["CreateOne", "UpdateOne", "UpdateMany"] },\n  { name = "todo", scalar = "Int", required = true, as_type = "todo", join_on = "id", exclude_from_input = ["CreateOne", "UpdateOne", "UpdateMany"], default_value = "context(\\"todo.id\\")" },\n  { name = "todo_uuid", scalar = "UUID", is_virtual = true, exclude_from_output = true },\n]\n'})}),"\n",(0,n.jsxs)(t.p,{children:["Enabling a virtual field is done by providng a true value to the ",(0,n.jsx)(t.code,{children:"is_virtual"})," property as\nshown above."]}),"\n",(0,n.jsx)(t.p,{children:"This add properties to resolver inputs allowing you to pass additional data to the API\nthat is related to the entity but not data source specific."})]})}function c(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>s,x:()=>o});var n=i(6540);const r={},a=n.createContext(r);function s(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);