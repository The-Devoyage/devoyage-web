"use strict";(self.webpackChunkdevoyage_web=self.webpackChunkdevoyage_web||[]).push([[3665],{3905:(e,r,t)=>{t.d(r,{Zo:()=>l,kt:()=>g});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=n.createContext({}),p=function(e){var r=n.useContext(u),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},l=function(e){var r=p(e.components);return n.createElement(u.Provider,{value:r},e.children)},d={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},c=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),c=p(t),g=a,f=c["".concat(u,".").concat(g)]||c[g]||d[g]||o;return t?n.createElement(f,i(i({ref:r},l),{},{components:t})):n.createElement(f,i({ref:r},l))}));function g(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=c;var s={};for(var u in r)hasOwnProperty.call(r,u)&&(s[u]=r[u]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=t[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}c.displayName="MDXCreateElement"},561:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>u,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var n=t(7462),a=(t(7294),t(3905));const o={id:"guard-expression",title:"Expressions & Conditions"},i=void 0,s={unversionedId:"guards/guard-expression",id:"guards/guard-expression",title:"Expressions & Conditions",description:"Evaluating Conditions",source:"@site/subgraph/07-guards/03-expression.md",sourceDirName:"07-guards",slug:"/guards/guard-expression",permalink:"/subgraph/guards/guard-expression",draft:!1,editUrl:"https://www.github.com/The-Devoyage/devoyage-web/blob/master/subgraph/07-guards/03-expression.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{id:"guard-expression",title:"Expressions & Conditions"},sidebar:"subgraphSidebar",previous:{title:"Guard Name",permalink:"/subgraph/guards/guard-name"},next:{title:"Error Messages",permalink:"/subgraph/guards/guard-messages"}},u={},p=[{value:"Evaluating Conditions",id:"evaluating-conditions",level:2},{value:"The <code>if_expr</code> Property",id:"the-if_expr-property",level:3}],l={toc:p};function d(e){let{components:r,...t}=e;return(0,a.kt)("wrapper",(0,n.Z)({},l,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"evaluating-conditions"},"Evaluating Conditions"),(0,a.kt)("p",null,"As discussed in ",(0,a.kt)("a",{parentName:"p",href:"/subgraph/guards/guard-basics"},"guard basics"),", guards should evaluate to a boolean. Truthy conditions result in a denied request."),(0,a.kt)("h3",{id:"the-if_expr-property"},"The ",(0,a.kt)("inlineCode",{parentName:"h3"},"if_expr")," Property"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"required")),(0,a.kt)("p",null,"When building a guard, it is required to create an ",(0,a.kt)("a",{parentName:"p",href:"/subgraph/expressions/eval-expr"},"expression")," that can be evaluated. This is done by providing a valid expression that returns a boolean."),(0,a.kt)("p",null,"Define the expression from the ",(0,a.kt)("inlineCode",{parentName:"p"},"if_expr")," key."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-toml"},'[[entities.data_source.resolvers.find_many.guards]]\nname = "require_access_revoked_false"\nif_expr = \'\'\'\n  contains(input("query", "access.revoked"), "true")\n\'\'\'\nthen_msg = "You do not have permission to view revoked tasks. Provide input value `acceess.revoked` as a false value."\n')))}d.isMDXComponent=!0}}]);