"use strict";(self.webpackChunkdevoyage_web=self.webpackChunkdevoyage_web||[]).push([[944],{3372:function(e){e.exports=JSON.parse('{"pluginId":"gateway","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"gatewaySidebar":[{"type":"link","label":"GraphQL Gateway","href":"/gateway/gateway-intro","docId":"gateway-intro"},{"type":"category","label":"Features","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Authorization By Default","href":"/gateway/Features/gateway-features-authorization-by-default","docId":"Features/gateway-features-authorization-by-default"},{"type":"link","label":"Federated File Uploads","href":"/gateway/Features/gateway-features-federated-file-uploads","docId":"Features/gateway-features-federated-file-uploads"},{"type":"link","label":"Global Context","href":"/gateway/Features/gateway-features-global-context","docId":"Features/gateway-features-global-context"}]},{"type":"link","label":"Setting Up The Gateway","href":"/gateway/gateway-setup","docId":"gateway-setup"},{"type":"category","label":"Usage","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Authorize Requests","href":"/gateway/Usage/gateway-usage-authorize-requests","docId":"Usage/gateway-usage-authorize-requests"},{"type":"link","label":"File Uploading","href":"/gateway/Usage/gateway-usage-file-uploads","docId":"Usage/gateway-usage-file-uploads"},{"type":"link","label":"File Serving","href":"/gateway/Usage/gateway-usage-file-serving","docId":"Usage/gateway-usage-file-serving"},{"type":"link","label":"Configure Context","href":"/gateway/Usage/gateway-usage-configure-context","docId":"Usage/gateway-usage-configure-context"}]},{"type":"html","value":"<a target=\\"_blank\\" href=\\"https://thedevoyage.gumroad.com/l/graphql-gateway\\"><button class=\\"button button--primary button--block margin-vert--sm\\">Purchase MIT License</button></a>"},{"type":"html","value":"<a target=\\"_blank\\" href=\\"https://thedevoyage.gumroad.com/l/graphql-gateway\\"><button class=\\"button button--success button--block\\">Support The Project</button>"}]},"docs":{"Features/gateway-features-authorization-by-default":{"id":"Features/gateway-features-authorization-by-default","title":"Authorization By Default","description":"The GraphQL Gateway provides an authorization status for every request by default. It provides this status to all services of the API, allowing you to control access to the data within your API.","sidebar":"gatewaySidebar"},"Features/gateway-features-federated-file-uploads":{"id":"Features/gateway-features-federated-file-uploads","title":"Federated File Uploads","description":"The Gateway is ready to handle the requirements of any modern tech application out of the box including File Uploading and File Serving. Send and receive files through the Gateway just like any other request.","sidebar":"gatewaySidebar"},"Features/gateway-features-global-context":{"id":"Features/gateway-features-global-context","title":"Global Context","description":"Context is a fancy word for relevant data associated with a request such as the id or role of the user who sent the request. This data can be accumulated by a variety of sources. The Devoyage\'s Gateway automatically shares this context with all connected services. Hence Global Context.","sidebar":"gatewaySidebar"},"gateway-intro":{"id":"gateway-intro","title":"GraphQL Gateway","description":"The Gateway service is the entry/exit point for a Federated API. Meaning, all requests must travel through the Gateway in order to access the data or other services within the API.","sidebar":"gatewaySidebar"},"gateway-setup":{"id":"gateway-setup","title":"Setting Up The Gateway","description":"Setting up the GraphQL Gateway is pretty straight forward.","sidebar":"gatewaySidebar"},"Usage/gateway-usage-authorize-requests":{"id":"Usage/gateway-usage-authorize-requests","title":"Authorize Requests","description":"Once you have your server up and running, you can now start to send requests. Each request sent to the server is automatically provided with an authorization status which can be used throughout the Federated API.","sidebar":"gatewaySidebar"},"Usage/gateway-usage-configure-context":{"id":"Usage/gateway-usage-configure-context","title":"Configure Context","description":"Context is a fancy word for relevant data. The GraphQL Gateway is pre-built with methods in order to easily create and share context globally with the entire Federated API.","sidebar":"gatewaySidebar"},"Usage/gateway-usage-file-serving":{"id":"Usage/gateway-usage-file-serving","title":"File Serving","description":"The gateway also comes pre-configured with a proxy that allows you to serve files from the external service through the gateway.","sidebar":"gatewaySidebar"},"Usage/gateway-usage-file-uploads":{"id":"Usage/gateway-usage-file-uploads","title":"File Uploading","description":"This gateway is pre-configured to handle file uploading and serving from an external micro service. It uses popular and common tooling to enable file uploading and serving through the gateway.","sidebar":"gatewaySidebar"}}}')}}]);