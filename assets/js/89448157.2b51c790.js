"use strict";(self.webpackChunkdevoyage_web=self.webpackChunkdevoyage_web||[]).push([[3455],{8352:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>o,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>d,toc:()=>l});var n=i(4848),s=i(8453);const a={id:"upload-and-serve-files",title:"Upload and Serve Files"},r=void 0,d={id:"usage/upload-and-serve-files",title:"Upload and Serve Files",description:"Upload file to server",source:"@site/media/03-usage/02-upload-a-file.md",sourceDirName:"03-usage",slug:"/usage/upload-and-serve-files",permalink:"/media/usage/upload-and-serve-files",draft:!1,unlisted:!1,editUrl:"https://www.github.com/The-Devoyage/devoyage-web/blob/master/media/03-usage/02-upload-a-file.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"upload-and-serve-files",title:"Upload and Serve Files"},sidebar:"mailerSidebar",previous:{title:"Query The Server",permalink:"/media/usage/query-the-server"},next:{title:"File Storage",permalink:"/media/usage/file-storage"}},o={},l=[{value:"Upload file to server",id:"upload-file-to-server",level:2},{value:"Get Media Records",id:"get-media-records",level:2},{value:"Fetch Media Asset",id:"fetch-media-asset",level:2}];function c(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"upload-file-to-server",children:"Upload file to server"}),"\n",(0,n.jsx)(t.p,{children:"Create a mutation request to the resolver 'singleFileUpload' with the following variables:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"export type SingleFileUploadInput = {\n  file: File;\n  title: string;\n};\n"})}),"\n",(0,n.jsx)(t.h2,{id:"get-media-records",children:"Get Media Records"}),"\n",(0,n.jsxs)(t.p,{children:["Once uploaded you can fetch ",(0,n.jsx)(t.code,{children:"Media"})," using the ",(0,n.jsx)(t.code,{children:"getMedia"})," query. Type ",(0,n.jsx)(t.code,{children:"Media"})," represents the record of the media in the mongodb, including the path."]}),"\n",(0,n.jsx)(t.h2,{id:"fetch-media-asset",children:"Fetch Media Asset"}),"\n",(0,n.jsxs)(t.p,{children:["Once you have the file path, the ",(0,n.jsx)(t.code,{children:"graphql-media"})," server can serve the file with a HTTP request. The default endpoint is ",(0,n.jsx)(t.code,{children:"/uploads"}),", but this can be configured in the ",(0,n.jsx)(t.code,{children:"media_config.json"})," file."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"const photoURI = `http://media_server:MEDIA_SERVER_PORT/${path}`;\n"})})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>r,x:()=>d});var n=i(6540);const s={},a=n.createContext(s);function r(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);