"use strict";(self.webpackChunkdevoyage_web=self.webpackChunkdevoyage_web||[]).push([[5135],{6653:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>d,frontMatter:()=>c,metadata:()=>r,toc:()=>u});var o=n(4848),i=n(8453);const c={id:"authorization",title:"Authentication Features"},a=void 0,r={id:"features/authorization",title:"Authentication Features",description:"Authentication is the act of proving identity, and the GraphQL Accounts service comes with the authentication features that you would expect within any modern API.",source:"@site/accounts/02-features/01-authorization.md",sourceDirName:"02-features",slug:"/features/authorization",permalink:"/accounts/features/authorization",draft:!1,unlisted:!1,editUrl:"https://www.github.com/The-Devoyage/devoyage-web/blob/master/accounts/02-features/01-authorization.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"authorization",title:"Authentication Features"},sidebar:"accountsSidebar",previous:{title:"GraphQL Accounts",permalink:"/accounts/intro"},next:{title:"Manage Accounts",permalink:"/accounts/features/manage"}},s={},u=[{value:"Register Accounts",id:"register-accounts",level:2},{value:"Verify Account",id:"verify-account",level:2},{value:"Login Account",id:"login-account",level:2}];function h(e){const t={code:"code",h2:"h2",p:"p",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:"Authentication is the act of proving identity, and the GraphQL Accounts service comes with the authentication features that you would expect within any modern API."}),"\n",(0,o.jsx)(t.h2,{id:"register-accounts",children:"Register Accounts"}),"\n",(0,o.jsxs)(t.p,{children:["Anyone may register/create an ",(0,o.jsx)(t.code,{children:"Account"}),". To create an account the potential account holder only needs to provide an email and a password."]}),"\n",(0,o.jsx)(t.h2,{id:"verify-account",children:"Verify Account"}),"\n",(0,o.jsx)(t.p,{children:"By default, accounts are not created with an active status, which is require to login! The user needs to prove their identity by providing a secret code during the verification process."}),"\n",(0,o.jsx)(t.h2,{id:"login-account",children:"Login Account"}),"\n",(0,o.jsx)(t.p,{children:"Once verified, the account holder may log in to their account. Logging in provides the account holder with a JWT that can later be used to prove identity throughout the API."})]})}function d(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>r});var o=n(6540);const i={},c=o.createContext(i);function a(e){const t=o.useContext(c);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),o.createElement(c.Provider,{value:t},e.children)}}}]);