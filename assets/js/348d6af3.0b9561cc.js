"use strict";(self.webpackChunkdevoyage_web=self.webpackChunkdevoyage_web||[]).push([[8095],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),u=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=u(n),m=r,g=d["".concat(l,".").concat(m)]||d[m]||p[m]||s;return n?a.createElement(g,i(i({ref:t},c),{},{components:n})):a.createElement(g,i({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,i=new Array(s);i[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var u=2;u<s;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8249:(e,t,n)=>{n.d(t,{U:()=>s});var a=n(7294),r=n(9960);const s=()=>a.createElement("div",{className:"alert alert--info margin-vert--lg",style:{display:"flex",justifyContent:"space-between",flexDirection:"column"}},a.createElement("div",{className:"avatar"},a.createElement("a",{className:"avatar__photo-link avatar__photo avatar__photo--lg",href:"https://medium.com/@thedevoyage"},a.createElement("img",{alt:"Nick McLean Profile Image",src:"https://cdn-images-1.medium.com/fit/c/63/63/1*TY45PiqMrWiUkivbhmp-Sw.jpeg"})),a.createElement("div",{className:"avatar__intro"},a.createElement("div",{className:"avatar__name"},"Nick McLean"),a.createElement("small",{className:"avatar__subtitle padding-bottom--md"},"Thanks for following along. If you would like to keep up to date make sure to check in frequently and/or follow us below!"),a.createElement("div",null,[{to:"https://medium.com/@thedevoyage",label:"Medium"},{to:"https://twitter.com/thedevoyage",label:"Twitter"},{to:"https://thedevoyage.slack.com",label:"Slack"},{to:"https://thedevoyage.gumroad.com/subscribe",label:"Newsletter"}].map((e=>a.createElement(r.Z,{to:e.to,key:e.to},a.createElement("button",{className:"button button--primary margin-right--md",style:{color:"#fff",backgroundColor:"var(--ifm-color-dark-blue)"}},e.label))))))))},538:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var a=n(7462),r=(n(7294),n(3905)),s=n(8249);const i={title:"Rust X JS - Class vs Struct - A look at Rust Through JS Tinted Glasses",slug:"rust_x_js-class_vs_struct",authors:["nick"],tags:["rust-x-js","rust","javascript"],date:new Date("2024-04-10T00:00:00.000Z"),description:"Looking at rust vs javascript and comparing classes to structs! Learn some rust, learn some JS.",image:"https://res.cloudinary.com/the-devoyage/image/upload/v1712804125/Rust_X_JS_adiz47.png",keywords:["rust","javascript","rustxjs"]},o=void 0,l={permalink:"/blog/rust_x_js-class_vs_struct",editUrl:"https://www.github.com/The-Devoyage/devoyage-web/blob/master/blog/rust_x_js-class_vs_struct/index.md",source:"@site/blog/rust_x_js-class_vs_struct/index.md",title:"Rust X JS - Class vs Struct - A look at Rust Through JS Tinted Glasses",description:"Looking at rust vs javascript and comparing classes to structs! Learn some rust, learn some JS.",date:"2024-04-10T00:00:00.000Z",formattedDate:"April 10, 2024",tags:[{label:"rust-x-js",permalink:"/blog/tags/rust-x-js"},{label:"rust",permalink:"/blog/tags/rust"},{label:"javascript",permalink:"/blog/tags/javascript"}],readingTime:5.175,hasTruncateMarker:!0,authors:[{name:"Nick McLean",title:"Maintainer of The Devoyage",url:"https://medium.com/@thedevoyage",imageURL:"https://cdn-images-1.medium.com/fit/c/63/63/1*TY45PiqMrWiUkivbhmp-Sw.jpeg",key:"nick"}],frontMatter:{title:"Rust X JS - Class vs Struct - A look at Rust Through JS Tinted Glasses",slug:"rust_x_js-class_vs_struct",authors:["nick"],tags:["rust-x-js","rust","javascript"],date:"2024-04-10T00:00:00.000Z",description:"Looking at rust vs javascript and comparing classes to structs! Learn some rust, learn some JS.",image:"https://res.cloudinary.com/the-devoyage/image/upload/v1712804125/Rust_X_JS_adiz47.png",keywords:["rust","javascript","rustxjs"]},nextItem:{title:"Unlocking the Rusty Treasure Trove: Crafting Next-Gen APIs with 6 Powerhouse Crates!",permalink:"/blog/6-creates-for-graphql-in-rust"}},u={authorsImageUrls:[void 0]},c=[{value:"A Starting Point",id:"a-starting-point",level:2},{value:"Adding Properties",id:"adding-properties",level:3},{value:"Methods and Implementations",id:"methods-and-implementations",level:3},{value:"Creating an Instance",id:"creating-an-instance",level:3},{value:"Extending and Traits",id:"extending-and-traits",level:3},{value:"Wrapping it Up",id:"wrapping-it-up",level:2}],p={toc:c};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Welcome Voyager!"),(0,r.kt)("p",null,"Today I'd love to try taking a look at Rust through the perspective of\na JavaScript (or TypeScript) developer. Rust's growing popularity is not only something to keep\nan eye on, but an excellent excuse to learn something new."),(0,r.kt)("p",null,"A JavaScript class is a syntax that allows you to define blueprints for creating objects.\nCompared to the Rust Programming Language, structs act in a similar way by\nproviding a mechanism for defining custom data types that encapsulate related data fields."),(0,r.kt)("p",null,"Let's compare the similarities and differences between these two concepts so that we can\nbetter understand their respective roles and functionalities in programming languages. By\nexamining their similarities, we can identify common principles that underlie both\nconcepts, facilitating knowledge transfer between languages and enhancing our ability to\nleverage their features effectively. In the end, hopefully we can learn some Rust!"),(0,r.kt)("p",null,"Keep in mind that this is mostly psuedo-code written to show quick comparisons. You may need to tweak\nit to get it to run!"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://res.cloudinary.com/the-devoyage/image/upload/v1712804125/Rust_X_JS_adiz47.png",alt:"Rust x JS Logo"})),(0,r.kt)("h2",{id:"a-starting-point"},"A Starting Point"),(0,r.kt)("p",null,"First, take a look at a basic starting point for each language by defining a Class and a Struct."),(0,r.kt)("p",null,"In JavaScript:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"class User {}\n")),(0,r.kt)("p",null,"and in Rust:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"struct User {}\n")),(0,r.kt)("p",null,"In both JavaScript and Rust, the concept of defining a structure or a class is fundamental\nto object-oriented programming (OOP). In JavaScript, the ",(0,r.kt)("inlineCode",{parentName:"p"},"class")," keyword is used to\ndefine a blueprint for creating objects with shared properties and methods. In this\nexample, User is an empty class declaration, indicating that it serves as a template\nfor creating user objects, which can later be instantiated with specific attributes and\nbehaviors."),(0,r.kt)("p",null,"On the other hand, Rust uses the ",(0,r.kt)("inlineCode",{parentName:"p"},"struct")," keyword to define a structure. In the given Rust code, User\nis declared as an empty struct, representing a user data structure that can hold various fields or\nproperties."),(0,r.kt)("p",null,"Both JavaScript classes and Rust structs provide a foundation for organizing and\nmanipulating data in a structured manner, albeit with different syntax and paradigms."),(0,r.kt)("h3",{id:"adding-properties"},"Adding Properties"),(0,r.kt)("p",null,"Expanding upon the initial examples, let's demonstrate how properties can be added to the\nUser class in JavaScript and the User struct in Rust."),(0,r.kt)("p",null,"In JavaScript, properties can be added to a class using the constructor function. Below is\nan example illustrating the addition of properties name and age to the User class:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"class User {\n  constructor(name, age) {\n    this.name = name;\n    this.age = age;\n  }\n}\n")),(0,r.kt)("p",null,"Similarly, in Rust, properties can be added to a struct using fields. Here's an example that\nextends the User struct with name and age fields:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"struct User {\n    name: String,\n    age: u32\n}\n")),(0,r.kt)("h3",{id:"methods-and-implementations"},"Methods and Implementations"),(0,r.kt)("p",null,"Adding functionality to a class or struct is essential for organizing logic associated with the\nclass or struct that is specific to the class/struct itself."),(0,r.kt)("p",null,"In both examples, we added a method named greet() to the User class/struct. This method returns a\ngreeting string using the name and age properties of the user. Instances of User can then\nutilize this method to greet the user."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"class User {\n  constructor(name, age) {\n    this.name = name;\n    this.age = age;\n  }\n  // Method to greet the user\n  greet() {\n    return `Hello, my name is ${this.name} and I'm ${this.age} years old.`;\n  }\n}\n")),(0,r.kt)("p",null,"and in Rust:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'struct User {\n    name: String,\n    age: u32\n}\n\nimpl User {\n    // Method to greet the user\n    pub fn greet(&self) -> String {\n        format!("Hello, my name is {} and I\'m {} years old.", self.name, self.age)\n    }\n}\n')),(0,r.kt)("h3",{id:"creating-an-instance"},"Creating an Instance"),(0,r.kt)("p",null,"Once a struct is defined, we can create an instance of the user in each respective language."),(0,r.kt)("p",null,"In JS:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const user = new User("Bongo", 11);\nconsole.log(user.greet()); // Invoke the method.\n')),(0,r.kt)("p",null,"In Rust:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'let user = User {\n    name: "Bongo".to_string(),\n    age: 11\n};\nprintln!("{}", user.greet());\n')),(0,r.kt)("p",null,"With Rust, a common pattern would be to manually simulate the ",(0,r.kt)("inlineCode",{parentName:"p"},"constructor")," functionality. In addition\nto adding the ",(0,r.kt)("inlineCode",{parentName:"p"},"greet")," function from above, we will implement a ",(0,r.kt)("inlineCode",{parentName:"p"},"new")," function."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'impl User {\n    // ... greet method\n    pub fn new(name: String, age: u32) -> Self {\n        let user = User {\n            name,\n            age\n        };\n\n        user\n    }\n}\n\nlet user = User::new("Bongo".to_string(), 11);\nprintln!("{}", user.greet());\n')),(0,r.kt)("h3",{id:"extending-and-traits"},"Extending and Traits"),(0,r.kt)("p",null,"While methods or implementations generally add functionality that is specific to the target class,\nthere are also ways to add shared functionality to the target struct/class."),(0,r.kt)("p",null,"Extending a class in JavaScripts adds functionality to the target class provided by a parent\nor ",(0,r.kt)("inlineCode",{parentName:"p"},"super")," class."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'// A parent class that provides some functionality\nclass Group {\n    constructor() {...}\n    async addToGroup() {\n        // Add the user to the group!\n    }\n}\n\n// Our user class receiving the provided functionality\nclass User extends Group {\n    constructor() {\n        // ...rest of constructor\n        super(); // Get the provided functionality\n    }\n    add() {\n        this.addToGroup(); // Call the method from the MySql class.\n    }\n    //...rest of class\n}\n\nconst user = new User("Bongo", 11);\nawait user.add();\n')),(0,r.kt)("p",null,"In Rust, we can see similar execution using Traits."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'// Define a trait named Group\ntrait Group {\n    fn add_to_group(&self);\n}\n\n// Define a struct representing a user\nstruct User {\n    name: String,\n    age: u32,\n}\n\nimpl User {\n    // Constructor function to create a new User instance\n    fn new(name: String, age: u32) -> Self {\n        Self { name, age }\n    }\n\n}\n\nimpl Group for User {\n    fn add_to_group(&self) {\n        // Add the user to the group!\n    }\n}\n\n// Now use the new functionality provided by the Group trait!\nlet user = User::new("Bongo", 11);\nuser.add_to_group();\n')),(0,r.kt)("h2",{id:"wrapping-it-up"},"Wrapping it Up"),(0,r.kt)("p",null,"While both Rust Structs and JavaScript Classes share similarities, they also can be used in different\ncapacities. Further reading that might interest you is how a Struct may also be a tuple or\nhow method overloading is achieved. There is much to learn and compare!"),(0,r.kt)("p",null,"Nonetheless, I hope you had some fun comparing these concepts! To me, it's always interesting finding\nand understanding the patterns that persist between the barrier of multiple domains such as\nthe chosen programming language. We really are all doing the same thing, regardless of language!"),(0,r.kt)(s.U,{mdxType:"BlogFooter"}))}d.isMDXComponent=!0}}]);