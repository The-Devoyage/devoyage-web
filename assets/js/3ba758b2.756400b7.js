"use strict";(self.webpackChunkdevoyage_web=self.webpackChunkdevoyage_web||[]).push([[8334],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>f});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var u=n.createContext({}),s=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},d=function(e){var t=s(e.components);return n.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,u=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=s(r),f=i,m=p["".concat(u,".").concat(f)]||p[f]||c[f]||a;return r?n.createElement(m,o(o({ref:t},d),{},{components:r})):n.createElement(m,o({ref:t},d))}));function f(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=p;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var s=2;s<a;s++)o[s]=r[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},4043:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var n=r(7462),i=(r(7294),r(3905));const a={id:"virtual-fields",title:"Virtual Fields"},o=void 0,l={unversionedId:"entities/fields/virtual-fields",id:"entities/fields/virtual-fields",title:"Virtual Fields",description:"The is_virtual Field Configuration",source:"@site/subgraph/05-entities/02-fields/12-virtual-fields.md",sourceDirName:"05-entities/02-fields",slug:"/entities/fields/virtual-fields",permalink:"/subgraph/entities/fields/virtual-fields",draft:!1,editUrl:"https://www.github.com/The-Devoyage/devoyage-web/blob/master/subgraph/05-entities/02-fields/12-virtual-fields.md",tags:[],version:"current",sidebarPosition:12,frontMatter:{id:"virtual-fields",title:"Virtual Fields"},sidebar:"subgraphSidebar",previous:{title:"Default Values",permalink:"/subgraph/entities/fields/default-values"},next:{title:"Primary Keys",permalink:"/subgraph/entities/fields/primary-keys"}},u={},s=[{value:"The <code>is_virtual</code> Field Configuration",id:"the-is_virtual-field-configuration",level:2}],d={toc:s};function c(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"the-is_virtual-field-configuration"},"The ",(0,i.kt)("inlineCode",{parentName:"h2"},"is_virtual")," Field Configuration"),(0,i.kt)("p",null,"Virtual fields are properties of an entity that do not exist within the data source and\ncan be useful in variety of circumstances."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-toml"},'[[entities]]\nname = "todo_access"\nrequired = true\nfields = [\n  { name = "id", scalar = "Int", required = true, exclude_from_input = ["All"] },\n  { name = "uuid", scalar = "UUID", required = true, exclude_from_input = ["CreateOne", "UpdateOne", "UpdateMany"] },\n  { name = "todo", scalar = "Int", required = true, as_type = "todo", join_on = "id", exclude_from_input = ["CreateOne", "UpdateOne", "UpdateMany"], default_value = "context(\\"todo.id\\")" },\n  { name = "todo_uuid", scalar = "UUID", is_virtual = true, exclude_from_output = true },\n]\n')),(0,i.kt)("p",null,"Enabling a virtual field is done by providng a true value to the ",(0,i.kt)("inlineCode",{parentName:"p"},"is_virtual")," property as\nshown above."),(0,i.kt)("p",null,"This add properties to resolver inputs allowing you to pass additional data to the API\nthat is related to the entity but not data source specific."))}c.isMDXComponent=!0}}]);