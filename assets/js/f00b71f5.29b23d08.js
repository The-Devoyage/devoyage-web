"use strict";(self.webpackChunkdevoyage_web=self.webpackChunkdevoyage_web||[]).push([[2045],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>f});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},d=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),c=u(r),f=i,m=c["".concat(s,".").concat(f)]||c[f]||p[f]||a;return r?n.createElement(m,l(l({ref:t},d),{},{components:r})):n.createElement(m,l({ref:t},d))}));function f(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,l=new Array(a);l[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var u=2;u<a;u++)l[u]=r[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}c.displayName="MDXCreateElement"},7346:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>o,toc:()=>u});var n=r(7462),i=(r(7294),r(3905));const a={id:"required-fields",title:"Required Fields"},l=void 0,o={unversionedId:"entities/fields/required-fields",id:"entities/fields/required-fields",title:"Required Fields",description:"Required",source:"@site/subgraph/05-entities/02-fields/05-required.md",sourceDirName:"05-entities/02-fields",slug:"/entities/fields/required-fields",permalink:"/subgraph/entities/fields/required-fields",draft:!1,editUrl:"https://www.github.com/The-Devoyage/devoyage-web/blob/master/subgraph/05-entities/02-fields/05-required.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{id:"required-fields",title:"Required Fields"},sidebar:"subgraphSidebar",previous:{title:"List Fields",permalink:"/subgraph/entities/fields/list-fields"},next:{title:"Exclude Input Proprerties",permalink:"/subgraph/entities/fields/exclude-from-input"}},s={},u=[{value:"Required",id:"required",level:2}],d={toc:u};function p(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"required"},"Required"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"optional")),(0,i.kt)("p",null,"Required fields play an important role in designing an API. Marking a field as ",(0,i.kt)("inlineCode",{parentName:"p"},"required")," shapes how a few resolvers\nare created."),(0,i.kt)("p",null,"Required fields make non nullable input fields for graphql mutation inputs when using create resolvers. In short,\ndoing so makes a field required when creating entities using the Subgraph API. Additionally it tells\nsubgraph that the datasource is expected to return a valid value."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-toml"},'[[service.entities]]\nname = "Comment"\nfields = [\n  { name = "id", scalar = "Int", required = true },\n]\n')))}p.isMDXComponent=!0}}]);