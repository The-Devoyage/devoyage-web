"use strict";(self.webpackChunkdevoyage_web=self.webpackChunkdevoyage_web||[]).push([[4891],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),s=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=s(r),f=a,g=c["".concat(p,".").concat(f)]||c[f]||d[f]||o;return r?n.createElement(g,i(i({ref:t},u),{},{components:r})):n.createElement(g,i({ref:t},u))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=c;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}c.displayName="MDXCreateElement"},2260:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var n=r(7462),a=(r(7294),r(3905));const o={id:"file-uploads",title:"File Uploading"},i=void 0,l={unversionedId:"usage/file-uploads",id:"usage/file-uploads",title:"File Uploading",description:"This gateway is pre-configured to handle file uploading and serving from an external micro service. It uses popular and common tooling to enable file uploading and serving through the gateway.",source:"@site/gateway/04-usage/02-file-uploads.md",sourceDirName:"04-usage",slug:"/usage/file-uploads",permalink:"/gateway/usage/file-uploads",draft:!1,editUrl:"https://www.github.com/The-Devoyage/devoyage-web/blob/master/gateway/04-usage/02-file-uploads.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"file-uploads",title:"File Uploading"},sidebar:"gatewaySidebar",previous:{title:"Authorize Requests",permalink:"/gateway/usage/authorize-requests"},next:{title:"File Serving",permalink:"/gateway/usage/file-serving"}},p={},s=[{value:"File Uploading",id:"file-uploading",level:2}],u={toc:s};function d(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"This gateway is pre-configured to handle file uploading and serving from an external micro service. It uses popular and common tooling to enable file uploading and serving through the gateway."),(0,a.kt)("h2",{id:"file-uploading"},"File Uploading"),(0,a.kt)("p",null,"This service comes installed with the ",(0,a.kt)("inlineCode",{parentName:"p"},"@profusion/apollo-federation-upload")," library, which allows you to send files through a graphql request. Simply include the file within the variable of the mutation that belongs to the external service. Send the file through the gateway like you would any other data."),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"You should only use this feature for hobby based projects, as CSRF attacks are possible if the Apollo Server is not configured correctly. ",(0,a.kt)("a",{parentName:"p",href:"https://www.apollographql.com/blog/backend/file-uploads/file-upload-best-practices/"},"Read More"))),(0,a.kt)("p",null,"Use the ",(0,a.kt)("inlineCode",{parentName:"p"},"Upload")," scalar, provided by the ",(0,a.kt)("inlineCode",{parentName:"p"},"@profusion/apollo-federation-upload")," library, within the federated micro service in order enable multi part file uploading."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"// External/Custom Upload server\n\nconst Mutation = gql`\n  scalar Upload\n\n  extend type Mutation {\n    createMedia(file: Upload!): Boolean!\n  }\n`;\n")))}d.isMDXComponent=!0}}]);