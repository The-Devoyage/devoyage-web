"use strict";(self.webpackChunkdevoyage_web=self.webpackChunkdevoyage_web||[]).push([[8428],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),c=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(u.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},l=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,u=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),l=c(n),h=a,d=l["".concat(u,".").concat(h)]||l[h]||m[h]||s;return n?r.createElement(d,i(i({ref:t},p),{},{components:n})):r.createElement(d,i({ref:t},p))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,i=new Array(s);i[0]=l;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var c=2;c<s;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}l.displayName="MDXCreateElement"},1836:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>m,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const s={id:"memberships",title:"Memberships"},i=void 0,o={unversionedId:"usage/memberships",id:"usage/memberships",title:"Memberships",description:"Users may manage multiple accounts within the API. Each account that the user may access shows up in the memberships property of user document.",source:"@site/users/03-usage/04-memberships.md",sourceDirName:"03-usage",slug:"/usage/memberships",permalink:"/users/usage/memberships",draft:!1,editUrl:"https://www.github.com/The-Devoyage/devoyage-web/blob/master/users/03-usage/04-memberships.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{id:"memberships",title:"Memberships"},sidebar:"usersSidebar",previous:{title:"Query Users",permalink:"/users/usage/query-users"},next:{title:"Create Admin Role",permalink:"/users/usage/create-admin-role"}},u={},c=[{value:"Invite Users or Remove Users From an Account",id:"invite-users-or-remove-users-from-an-account",level:2},{value:"Manage Invite Status",id:"manage-invite-status",level:2},{value:"Switch Membership",id:"switch-membership",level:2}],p={toc:c};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Users may manage multiple accounts within the API. Each account that the user may access shows up in the memberships property of user document."),(0,a.kt)("h2",{id:"invite-users-or-remove-users-from-an-account"},"Invite Users or Remove Users From an Account"),(0,a.kt)("p",null,"Invite users by using the ",(0,a.kt)("inlineCode",{parentName:"p"},"updateUser")," mutation. Include the memberships variable with a status of ",(0,a.kt)("inlineCode",{parentName:"p"},"PENDING")," to invite the user to join your account."),(0,a.kt)("p",null,"You may always set the status to ",(0,a.kt)("inlineCode",{parentName:"p"},"REVOKED")," to remove a user from your account."),(0,a.kt)("p",null,"Include a role, to limit the user's capability within an account."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "updateUserInput": {\n    "query": {\n      "email": [\n        {\n          "filterBy": "MATCH",\n          "string": "nickmclean@thedevoyage.com"\n        }\n      ]\n    },\n    "payload": {\n      "memberships": {\n        "account": "my_account_id",\n        "role": 100,\n        "status": "PENDING" // "REVOKED"\n      }\n    }\n  }\n}\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},"tip")),": If the user that you are inviting does not exist within the database, simply use the ",(0,a.kt)("inlineCode",{parentName:"p"},"inviteUser")," resolver to automatically create and invite a user."),(0,a.kt)("h2",{id:"manage-invite-status"},"Manage Invite Status"),(0,a.kt)("p",null,"You may switch the status of any of your memberships to ",(0,a.kt)("inlineCode",{parentName:"p"},"ACTIVE")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"INACTIVE"),", as long as the membership does not have the status of ",(0,a.kt)("inlineCode",{parentName:"p"},"REVOKED"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "updateUserInput": {\n    "query": {\n      "_id": {\n        "filterBy": "OBJECTID",\n        "string": "my_unique_object_id"\n      }\n    },\n    "payload": {\n      "memberships": {\n        "account": "my_account_id",\n        "status": "ACTIVE" // "INACTIVE"\n      }\n    }\n  }\n}\n')),(0,a.kt)("h2",{id:"switch-membership"},"Switch Membership"),(0,a.kt)("p",null,"Send a mutation with the following variables to the ",(0,a.kt)("inlineCode",{parentName:"p"},"switchUserMembership")," resolver to change account access. Users must be logged in to their own membership before switching memberships."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "switchUserMembershipInput": {\n    "membership_id": "6259e0696f90352f2f3b9070"\n  }\n}\n')),(0,a.kt)("p",null,"A response with a new JWT will be sent back, granting access to the account as the user."))}m.isMDXComponent=!0}}]);