"use strict";(self.webpackChunkdevoyage_web=self.webpackChunkdevoyage_web||[]).push([[695],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(r),m=o,v=d["".concat(c,".").concat(m)]||d[m]||p[m]||a;return r?n.createElement(v,i(i({ref:t},u),{},{components:r})):n.createElement(v,i({ref:t},u))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},5609:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var n=r(7462),o=(r(7294),r(3905));const a={id:"intro",title:"Orion's Arrow"},i=void 0,s={unversionedId:"intro",id:"intro",title:"Orion's Arrow",description:"The @the-devoyage/orions-arrow is a SDK designed to easily connect React applications to various micro-service APIs created by The Devoyage making it incredibly easy to integrate an application with the Devoyage APIs.",source:"@site/orions-arrow/01-intro.md",sourceDirName:".",slug:"/intro",permalink:"/orions-arrow/intro",draft:!1,editUrl:"https://www.github.com/The-Devoyage/devoyage-web/blob/master/orions-arrow/01-intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"intro",title:"Orion's Arrow"},sidebar:"orionsArrowSidebar",next:{title:"Install Orion's Arrow",permalink:"/orions-arrow/setup"}},c={},l=[{value:"Providers",id:"providers",level:2},{value:"Contexts",id:"contexts",level:2},{value:"Validations",id:"validations",level:2}],u={toc:l};function p(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"@the-devoyage/orions-arrow")," is a SDK designed to easily connect React applications to various micro-service APIs created by The Devoyage making it incredibly easy to integrate an application with the Devoyage APIs."),(0,o.kt)("h2",{id:"providers"},"Providers"),(0,o.kt)("p",null,"Use the provided React Providers to wrap components, enabling instant access to the API. Pass in custom GraphQL Queries and filters to get the information you need. "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"<Providers.Accounts.Queries.GetAccountsProvider\n  query={{\n    documentNode: MY_GET_ACCOUNTS_QUERY,\n    variables: {\n      getAccountsInput: {\n        query: {...},\n      },\n    },\n  }}\n>\n  {children}\n</Providers.Accounts.Queries.GetAccountsProvider>\n")),(0,o.kt)("p",null,"These providers can be used to fetch, update, create, or delete data from the API."),(0,o.kt)("h2",{id:"contexts"},"Contexts"),(0,o.kt)("p",null,"Once the providers are set up, you can access the results from any child component. "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const { accounts, loading } = useGetAccounts();\n")),(0,o.kt)("h2",{id:"validations"},"Validations"),(0,o.kt)("p",null,"Mutation providers provide forms using the popular Formik library, each of which is validated automatically when submitting with the ",(0,o.kt)("inlineCode",{parentName:"p"},"Yup")," validation library."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'const { form, loading } = Hooks.Accounts.useRegisterAccount();\n\n<Input \n  type="email" \n  name="email" \n  onChange={form.handleChange} \n  value={form.values.email} \n  invalid={!!form.errors.email}\n/>\n')))}p.isMDXComponent=!0}}]);