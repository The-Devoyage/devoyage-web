"use strict";(self.webpackChunkdevoyage_web=self.webpackChunkdevoyage_web||[]).push([[8483],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>m});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),u=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=u(e.components);return n.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=u(r),m=o,v=p["".concat(c,".").concat(m)]||p[m]||d[m]||a;return r?n.createElement(v,i(i({ref:t},l),{},{components:r})):n.createElement(v,i({ref:t},l))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=p;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var u=2;u<a;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},363:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var n=r(7462),o=(r(7294),r(3905));const a={id:"add-the-provider",title:"Add The Provider"},i=void 0,s={unversionedId:"usage/add-the-provider",id:"usage/add-the-provider",title:"Add The Provider",description:"Orion's Arrow allows access to the data and forms that can connect to the API through React Context Providers.",source:"@site/orions-arrow/03-usage/01-add-the-provider.md",sourceDirName:"03-usage",slug:"/usage/add-the-provider",permalink:"/orions-arrow/usage/add-the-provider",draft:!1,editUrl:"https://www.github.com/The-Devoyage/devoyage-web/blob/master/orions-arrow/03-usage/01-add-the-provider.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"add-the-provider",title:"Add The Provider"},sidebar:"orionsArrowSidebar",previous:{title:"Install Orion's Arrow",permalink:"/orions-arrow/setup"},next:{title:"Use The Context",permalink:"/orions-arrow/usage/use-the-context"}},c={},u=[{value:"The Parent Component",id:"the-parent-component",level:2}],l={toc:u};function d(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Orion's Arrow allows access to the data and forms that can connect to the API through React Context Providers."),(0,o.kt)("h2",{id:"the-parent-component"},"The Parent Component"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Add the provider of the API call you need to execute. In this case, we will get Accounts. ")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const Parent = () => {\n  return (\n    <Providers.Accounts.Queries.GetAccountsProvider>\n      <Child />\n    </Providers.Accounts.Queries.GetAccountsProvider>\n  )\n}\n")),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"Create the GraphQL Query.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const ACCOUNT_PAGE_GET_ACCOUNTS = gql`\n  query AccountPage_GetAccounts(\n    $getAccountsInput: GetAccountsInput!\n  ) {\n    getAccounts(getAccountsInput: $getAccountsInput) {\n      data {\n        _id\n        email\n        createdAt\n      }\n    }\n  }\n`;\n")),(0,o.kt)("ol",{start:3},(0,o.kt)("li",{parentName:"ol"},"Provide the required GraphQL Props to the Provider. Queries use the ",(0,o.kt)("inlineCode",{parentName:"li"},"query")," prop while mutations use the ",(0,o.kt)("inlineCode",{parentName:"li"},"mutation")," prop.")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"query")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"export interface QueryBase<T extends Record<string, unknown>> {\n  documentNode: DocumentNode;\n  variables: T;\n}\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"mutation")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"export interface MutationBase<\n  T extends Record<string, unknown>,\n  ReturnType extends Record<string, unknown>\n> {\n  documentNode: DocumentNode;\n  variables?: T;\n  refetchQueries?: string[];\n  onCompleted: (\n    data: ReturnType,\n    helpers: FormikHelpers<T>,\n    reset: () => void\n  ) => void;\n  onError: (\n    error: ApolloError,\n    helpers: FormikHelpers<T>,\n    reset: () => void\n  ) => void;\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"<Providers.Accounts.Queries.GetAccountsProvider\n  query={{\n    documentNode: ACCOUNT_PAGE_GET_ACCOUNTS,\n    variables: {\n      getAccountsInput: {\n        query: {},\n      },\n    },\n  }}\n>\n  <Child />\n</Providers.Accounts.Queries.GetAccountsProvider>\n")))}d.isMDXComponent=!0}}]);