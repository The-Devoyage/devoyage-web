"use strict";(self.webpackChunkdevoyage_web=self.webpackChunkdevoyage_web||[]).push([[7823],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>v});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),u=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=u(r),v=a,y=d["".concat(l,".").concat(v)]||d[v]||p[v]||s;return r?n.createElement(y,o(o({ref:t},c),{},{components:r})):n.createElement(y,o({ref:t},c))}));function v(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=r.length,o=new Array(s);o[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var u=2;u<s;u++)o[u]=r[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},8823:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>u});var n=r(7462),a=(r(7294),r(3905));const s={id:"entity-data-source-resolvers",title:"Resolvers Specific Options"},o=void 0,i={unversionedId:"entities/entity-data-source/entity-data-source-resolvers",id:"entities/entity-data-source/entity-data-source-resolvers",title:"Resolvers Specific Options",description:"Entity Resolver Configuration",source:"@site/subgraph/05-entities/05-entity-data-source/03-resolvers.md",sourceDirName:"05-entities/05-entity-data-source",slug:"/entities/entity-data-source/entity-data-source-resolvers",permalink:"/subgraph/entities/entity-data-source/entity-data-source-resolvers",draft:!1,editUrl:"https://www.github.com/The-Devoyage/devoyage-web/blob/master/subgraph/05-entities/05-entity-data-source/03-resolvers.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{id:"entity-data-source-resolvers",title:"Resolvers Specific Options"},sidebar:"subgraphSidebar",previous:{title:"Tables, Collections, and Paths",permalink:"/subgraph/entities/entity-data-source/table-collection-path"},next:{title:"Required Entities",permalink:"/subgraph/entities/required-entities"}},l={},u=[{value:"Entity Resolver Configuration",id:"entity-resolver-configuration",level:2},{value:"Resolvers and Options",id:"resolvers-and-options",level:2},{value:"Resolver Guards",id:"resolver-guards",level:3},{value:"Search Query",id:"search-query",level:3},{value:"Path",id:"path",level:3},{value:"Method",id:"method",level:3}],c={toc:u};function p(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"entity-resolver-configuration"},"Entity Resolver Configuration"),(0,a.kt)("p",null,"Configuration that is specific to a resolver can be configured with the ",(0,a.kt)("inlineCode",{parentName:"p"},"resolvers")," property. This is useful when applying unique\nendoits for specific resolvers, or adding guards that should only be enforced for specific resolvers."),(0,a.kt)("p",null,"In GraphQL and Subgraph, a resolver is related to an action such as Finding, Creating, or Updating."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-toml"},'[[service.entities.data_source.resolvers.find_one.guards]]\nname = "require_access_user_uuid"\nif_expr = \'\'\'\n  !every(input("query", "access.user.uuid"), token_data("user_uuid"))\n\'\'\'\nthen_msg = "You do not have permission to view this task. Provide input value `acceess.user.uuid`."\n')),(0,a.kt)("h2",{id:"resolvers-and-options"},"Resolvers and Options"),(0,a.kt)("p",null,"You may apply the following options to any of the available resolvers:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-toml"},"# Find One Options\n[[service.entities.data_source.resolvers.find_one.guards]]\n\n# Find Many Options\n[[service.entities.data_source.resolvers.find_many.guards]]\n\n# Create One Options\n[[service.entities.data_source.resolvers.create_one.guards]]\n\n# Update One Options\n[[service.entities.data_source.resolvers.update_one.guards]]\n\n# Update Many Options\n[[service.entities.data_source.resolvers.update_many.guards]]\n")),(0,a.kt)("h3",{id:"resolver-guards"},"Resolver Guards"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/subgraph/category/guards"},"Guards")," can be applied to specific resolvers, allowing you to have unique guards for unique actions."),(0,a.kt)("h3",{id:"search-query"},"Search Query"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"HTTP Data Sources Only")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-toml"},'[service.entities.data_source.resolvers]\n[service.entities.data_source.resolvers.find_many]\nsearch_query = [["userId", ":userId"], ["completed", ":completed"]] #Append Search Query to Path for HTTP Data Sources.\n')),(0,a.kt)("h3",{id:"path"},"Path"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"HTTP Data Sources Only")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-toml"},'[service.entities.data_source.resolvers]\n[service.entities.data_source.resolvers.find_one]\npath = "/:id"  # Converts the ID property from the GraphQL Input into the ID Path Parameter for HTTP Data Sources.\n')),(0,a.kt)("h3",{id:"method"},"Method"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"HTTP Data Sources Only")),(0,a.kt)("p",null,"Override the default applied method to a HTTP Resolver."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-toml"},'[service.entities.data_source.resolvers]\nmethod = "Post"\n')))}p.isMDXComponent=!0}}]);