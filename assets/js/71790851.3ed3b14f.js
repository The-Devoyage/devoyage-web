"use strict";(self.webpackChunkdevoyage_web=self.webpackChunkdevoyage_web||[]).push([[3503],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var o=n.createContext({}),s=function(e){var t=n.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(o.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,o=e.parentName,p=u(e,["components","mdxType","originalType","parentName"]),d=s(r),f=a,v=d["".concat(o,".").concat(f)]||d[f]||c[f]||l;return r?n.createElement(v,i(i({ref:t},p),{},{components:r})):n.createElement(v,i({ref:t},p))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,i=new Array(l);i[0]=d;var u={};for(var o in t)hasOwnProperty.call(t,o)&&(u[o]=t[o]);u.originalType=e,u.mdxType="string"==typeof e?e:a,i[1]=u;for(var s=2;s<l;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},9833:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>c,frontMatter:()=>l,metadata:()=>u,toc:()=>s});var n=r(7462),a=(r(7294),r(3905));const l={id:"default-values",title:"Default Values"},i=void 0,u={unversionedId:"entities/fields/default-values",id:"entities/fields/default-values",title:"Default Values",description:"Providing Default Values",source:"@site/subgraph/05-entities/02-fields/11-default-value.md",sourceDirName:"05-entities/02-fields",slug:"/entities/fields/default-values",permalink:"/subgraph/entities/fields/default-values",draft:!1,editUrl:"https://www.github.com/The-Devoyage/devoyage-web/blob/master/subgraph/05-entities/02-fields/11-default-value.md",tags:[],version:"current",sidebarPosition:11,frontMatter:{id:"default-values",title:"Default Values"},sidebar:"subgraphSidebar",previous:{title:"Eager Loading",permalink:"/subgraph/entities/fields/eager-loading"},next:{title:"Virtual Fields",permalink:"/subgraph/entities/fields/virtual-fields"}},o={},s=[{value:"Providing Default Values",id:"providing-default-values",level:2}],p={toc:s};function c(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"providing-default-values"},"Providing Default Values"),(0,a.kt)("p",null,"APIs often provide dynamic default values when creating or updating an entity. These values can be passed\nusing the ",(0,a.kt)("inlineCode",{parentName:"p"},"default_value")," option."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-toml"},'[[entities]]\nname = "profile"\nrequired = true\nfields = [\n  { name = "id", scalar = "Int", required = true, exclude_from_input = ["All"] },\n  { name = "url", scalar = "String",  default_value = "www.placeholder-website.com" },\n]\n')),(0,a.kt)("p",null,"Default values use ",(0,a.kt)("inlineCode",{parentName:"p"},"evalexpr"),", a popular rust crate, to calcaulate the value dynamically based on the context\nof a request using the same API as Guard Expressions."))}c.isMDXComponent=!0}}]);