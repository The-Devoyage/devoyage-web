"use strict";(self.webpackChunkdevoyage_web=self.webpackChunkdevoyage_web||[]).push([[8954],{3905:(e,n,r)=>{r.d(n,{Zo:()=>l,kt:()=>m});var t=r(7294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function s(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?s(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function o(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},s=Object.keys(e);for(t=0;t<s.length;t++)r=s[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)r=s[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=t.createContext({}),u=function(e){var n=t.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},l=function(e){var n=u(e.components);return t.createElement(c.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},p=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,s=e.originalType,c=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),p=u(r),m=a,f=p["".concat(c,".").concat(m)]||p[m]||d[m]||s;return r?t.createElement(f,i(i({ref:n},l),{},{components:r})):t.createElement(f,i({ref:n},l))}));function m(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var s=r.length,i=new Array(s);i[0]=p;var o={};for(var c in n)hasOwnProperty.call(n,c)&&(o[c]=n[c]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var u=2;u<s;u++)i[u]=r[u];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}p.displayName="MDXCreateElement"},308:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>u});var t=r(7462),a=(r(7294),r(3905));const s={id:"examples-guards",title:"Guards"},i=void 0,o={unversionedId:"examples/examples-guards",id:"examples/examples-guards",title:"Guards",description:"",source:"@site/subgraph/12-examples/11-guards.md",sourceDirName:"12-examples",slug:"/examples/examples-guards",permalink:"/subgraph/examples/examples-guards",draft:!1,editUrl:"https://www.github.com/The-Devoyage/devoyage-web/blob/master/subgraph/12-examples/11-guards.md",tags:[],version:"current",sidebarPosition:11,frontMatter:{id:"examples-guards",title:"Guards"},sidebar:"subgraphSidebar",previous:{title:"Extending Entities/Associations",permalink:"/subgraph/examples/examples-associations"},next:{title:"WebAuthN & Auth API",permalink:"/subgraph/examples/examples-webauthn-auth"}},c={},u=[],l={toc:u};function d(e){let{components:n,...r}=e;return(0,a.kt)("wrapper",(0,t.Z)({},l,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-toml"},'[service]\nname = "espresso"\nport = 3030\nlog_level = "debug"\n\n# If the `Authorization` header does not have the value "12345", then deny access.\n# Escape strings when using inline definitions.\n[[service.guards]]\nname = "invalid_access_key"\nif_expr = "headers(\\"Authorization\\") != \\"12345\\""\nthen_msg = "Invalid Access Key - Permission Denied"\n\n# If the `role` header does not have the value of "admin", then deny access.\n[[service.guards]]\nname = "invalid_role"\nif_expr = "headers(\\"role\\") != \\"admin\\""\nthen_msg = "Invalid Role - Permission Denied"\n\n[[service.data_sources]]\n[service.data_sources.SQL]\nname = "caffeine_data_source"\nuri = "sqlite:/home/nickisyourfan/Desktop/DEV/dbs/caffeine.db"\ndialect = "SQLITE"\n[[service.data_sources]]\n[service.data_sources.Mongo]\nname = "beers_ds"\nuri = "mongodb://sun:sun@127.0.0.1:27017/sun"\ndb = "sun"\n\n[[service.entities]]\nname = "Espresso"\n\n[[service.entities.guards]]\nname = "invalid_name"\n# If the user searches by anything other than "nick" for the `name` property, then deny access.\n# The input function returns an array, so make sure to use an array method to evaluate the expression.\nif_expr = "!contains(input(\\"query\\" \\"name\\"), \\"nick\\")"\nthen_msg = "Invalid Name - Permission Denied"\n\n[service.entities.data_source]\nfrom = "caffeine_data_source"\n[service.entities.data_source.resolvers]\n[service.entities.data_source.resolvers.find_one]\n[[service.entities.data_source.resolvers.find_one.guards]]\nname = "invalid_age"\n# No need to escape strings with multi line definitions.\nif_expr = \'\'\'\n    token_data("user_uuid") != "abcdefg"\n\'\'\'\nthen_msg = "Permission Denied"\n\n[[service.entities.fields]]\nname = "id"\nscalar = "Int"\nrequired = true\nexclude_from_input = ["CreateOne", "UpdateOne", "UpdateMany"]\n[[service.entities.fields]]\nname = "name"\nscalar = "String"\nrequired = true\nguards = [\n  {name = "id", if_expr = "headers(\\"role\\") != \\"admin\\"", then_msg = "Invalid Access - Field Level" },\n]\n[[service.entities.fields]]\nname = "price"\nscalar = "Int"\nrequired = true\nlist = false\nguards = [\n  {name = "price", if_expr = "headers(\\"user_id\\") != 1", then_msg = "Access Denied - You do not have permission." },\n]\n[[service.entities.fields]]\nname = "available"\nscalar = "Boolean"\nrequired = true\n')))}d.isMDXComponent=!0}}]);