"use strict";(self.webpackChunkdevoyage_web=self.webpackChunkdevoyage_web||[]).push([[2163],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>h});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var l=n.createContext({}),u=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},d=function(e){var t=u(e.components);return n.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),c=u(r),h=i,y=c["".concat(l,".").concat(h)]||c[h]||p[h]||a;return r?n.createElement(y,o(o({ref:t},d),{},{components:r})):n.createElement(y,o({ref:t},d))}));function h(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=c;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var u=2;u<a;u++)o[u]=r[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}c.displayName="MDXCreateElement"},8556:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var n=r(7462),i=(r(7294),r(3905));const a={id:"query-the-server",title:"Query The Server"},o=void 0,s={unversionedId:"usage/query-the-server",id:"usage/query-the-server",title:"Query The Server",description:"Querying this server is easy and only requires a single header to be present with each request.",source:"@site/users/03-usage/01-query-the-server.md",sourceDirName:"03-usage",slug:"/usage/query-the-server",permalink:"/users/usage/query-the-server",draft:!1,editUrl:"https://www.github.com/The-Devoyage/devoyage-web/blob/master/users/03-usage/01-query-the-server.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"query-the-server",title:"Query The Server"},sidebar:"usersSidebar",previous:{title:"Setup The Users Server",permalink:"/users/setup"},next:{title:"Initial Login",permalink:"/users/usage/initial-login"}},l={},u=[{value:"The Context Header",id:"the-context-header",level:2},{value:"Roles and Identity",id:"roles-and-identity",level:2},{value:"Extended Properties/Required Services",id:"extended-propertiesrequired-services",level:2}],d={toc:u};function p(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Querying this server is easy and only requires a single header to be present with each request."),(0,i.kt)("p",null,"The server should sit behind a federated gateway. Query the gateway to query the server. Use the Apollo Sandbox for generated documentation on available resolvers and queries."),(0,i.kt)("h2",{id:"the-context-header"},"The Context Header"),(0,i.kt)("p",null,"All routes within this service require a ",(0,i.kt)("inlineCode",{parentName:"p"},"context")," header to be passed with the request. The ",(0,i.kt)("inlineCode",{parentName:"p"},"context")," header should be stringified JSON of the type Context. Be sure to include the ",(0,i.kt)("inlineCode",{parentName:"p"},"auth")," property."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"interface Context extends Record<string, any> {\n  auth: {\n    account: { _id: string; email: string } | null;\n    user: {\n      _id: string;\n      role: number;\n      email: string;\n    } | null;\n    isAuth: boolean;\n  };\n  // ...your context\n}\n")),(0,i.kt)("h2",{id:"roles-and-identity"},"Roles and Identity"),(0,i.kt)("p",null,"As you see above, the ",(0,i.kt)("inlineCode",{parentName:"p"},"context")," header provides the service with information about the authorized user's role and identity. Authorization should take place in the Gateway, as this service does not handle authorization."),(0,i.kt)("p",null,"While the user and account ",(0,i.kt)("inlineCode",{parentName:"p"},"_id")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"email")," properties remain fairly straight forward, the ",(0,i.kt)("inlineCode",{parentName:"p"},"role")," property must conform a bit to integer standards."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Admin === 1"),(0,i.kt)("li",{parentName:"ul"},"General User === 10")),(0,i.kt)("h2",{id:"extended-propertiesrequired-services"},"Extended Properties/Required Services"),(0,i.kt)("p",null,"The users service extends federated entities from external services. The following federated services and properties are required in order to run this service."),(0,i.kt)("p",null,"Account"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"_","id"),(0,i.kt)("li",{parentName:"ul"},"email")),(0,i.kt)("p",null,"Media"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"_","id")),(0,i.kt)("p",null,"You may manually remove the entities, if not needed."))}p.isMDXComponent=!0}}]);