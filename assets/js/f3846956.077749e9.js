"use strict";(self.webpackChunkdevoyage_web=self.webpackChunkdevoyage_web||[]).push([[3953],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>h});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(r),h=o,f=d["".concat(s,".").concat(h)]||d[h]||u[h]||i;return r?n.createElement(f,a(a({ref:t},c),{},{components:r})):n.createElement(f,a({ref:t},c))}));function h(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var p=2;p<i;p++)a[p]=r[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},7605:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var n=r(7462),o=(r(7294),r(3905));const i={id:"cors-options",title:"Cors Options"},a=void 0,l={unversionedId:"the-service/cors-options",id:"the-service/cors-options",title:"Cors Options",description:"Configuring the CORS options for the running service can be done at the Service level of the configuration.",source:"@site/subgraph/03-the-service/05-cors.md",sourceDirName:"03-the-service",slug:"/the-service/cors-options",permalink:"/subgraph/the-service/cors-options",draft:!1,editUrl:"https://www.github.com/The-Devoyage/devoyage-web/blob/master/subgraph/03-the-service/05-cors.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{id:"cors-options",title:"Cors Options"},sidebar:"subgraphSidebar",previous:{title:"Imports",permalink:"/subgraph/the-service/service-imports"},next:{title:"Service Guards",permalink:"/subgraph/the-service/service-guards"}},s={},p=[{value:"Default Options",id:"default-options",level:2},{value:"Cors Options",id:"cors-options",level:2},{value:"Headers",id:"headers",level:2},{value:"Allow Any Origin",id:"allow-any-origin",level:3},{value:"Allow Origins",id:"allow-origins",level:3},{value:"Allow Methods",id:"allow-methods",level:3}],c={toc:p};function u(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Configuring the CORS options for the running service can be done at the Service level of the configuration."),(0,o.kt)("h2",{id:"default-options"},"Default Options"),(0,o.kt)("p",null,"If specific configuration is not provided, subgraph provides a default CORS config to get started quickly."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-toml"},'[service.cors]\nallow_any_origin = true\nallow_origins = []\nallow_headers = [\n  "Content-Type",\n]\nallow_methods = [\n  { method = "POST" }\n]\n\n')),(0,o.kt)("h2",{id:"cors-options"},"Cors Options"),(0,o.kt)("h2",{id:"headers"},"Headers"),(0,o.kt)("p",null,"This string array allows you to specify which headers may be sent to the service. If none provided, Subgraph will allow any origin with some basic headers applied."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-toml"},'allow_headers = [\n  "Content-Type", # Do not forget to specify this one manually if providing additional headers.\n  "Authorization"\n]\n')),(0,o.kt)("h3",{id:"allow-any-origin"},"Allow Any Origin"),(0,o.kt)("p",null,"A boolean property to allow incoming requests from any origin."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-toml"},"allow_any_origin = false # Defaults to true.\n")),(0,o.kt)("h3",{id:"allow-origins"},"Allow Origins"),(0,o.kt)("p",null,"By default, subgraph allows all origins to send requests to the API. In the event you want to only accept requests from a specific origin,\nyou may specify these here."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-toml"},'allow_origins = [\n  "http://www.domain.com",\n  "http://reporting.domain.com"\n]\n')),(0,o.kt)("h3",{id:"allow-methods"},"Allow Methods"),(0,o.kt)("p",null,"Specify an array of Method Options of which to allow to your service. By default, subgraph allows only ",(0,o.kt)("inlineCode",{parentName:"p"},"POST")," requests."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-toml"},'allow_methods = [\n  { method = "POST" },\n  { method = "GET" }\n]\n')))}u.isMDXComponent=!0}}]);