"use strict";(self.webpackChunkdevoyage_web=self.webpackChunkdevoyage_web||[]).push([[1124],{632:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var t=s(4848),i=s(8453);const r={id:"examples-associations",title:"Extending Entities/Associations"},a=void 0,o={id:"examples/examples-associations",title:"Extending Entities/Associations",description:"Using the field configuration properties, astype, joinon, and join_from, you can extend or associate an entity with another.",source:"@site/subgraph/12-examples/10-joins-extends.md",sourceDirName:"12-examples",slug:"/examples/examples-associations",permalink:"/subgraph/examples/examples-associations",draft:!1,unlisted:!1,editUrl:"https://www.github.com/The-Devoyage/devoyage-web/blob/master/subgraph/12-examples/10-joins-extends.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{id:"examples-associations",title:"Extending Entities/Associations"},sidebar:"subgraphSidebar",previous:{title:"CORS Examples",permalink:"/subgraph/examples/examples-cors"},next:{title:"Guards",permalink:"/subgraph/examples/examples-guards"}},c={},d=[];function l(e){const n={code:"code",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["Using the field configuration properties, ",(0,t.jsx)(n.code,{children:"as_type"}),", ",(0,t.jsx)(n.code,{children:"join_on"}),", and ",(0,t.jsx)(n.code,{children:"join_from"}),", you can extend or associate an entity with another."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",children:'[service]\nname = "friends"\nport = 4050\nlog_level = "debug"\n\n[[service.data_sources]]\n[service.data_sources.Mongo]\nname = "friends_data_source"\nuri = "mongodb://sun:sun@127.0.0.1:27017/sun"\ndb = "sun"\n\n[[service.data_sources]]\n[service.data_sources.SQL]\nname = "coffee_data_source"\nuri = "sqlite:/home/nickisyourfan/Desktop/DEV/dbs/caffeine.db"\ndialect = "SQLITE"\n\n[[service.data_sources]]\n[service.data_sources.HTTP]\nname = "todos"\nurl = "https://jsonplaceholder.typicode.com"\n\n## The following `user` entity defines associations to the `Coffee` and  `todo` entities.\n## The DB stores a reference ID or array of IDs to associate.\n## Subgraph automatically populates the associated entity when querying.\n[[service.entities]]\nname = "user"\n[[service.entities.fields]]\nname = "_id"\nscalar = "ObjectID"\nrequired = true\nexclude_from_input = ["CreateOne", "UpdateOne"]\n[[service.entities.fields]]\nname = "name"\nscalar = "String"\nrequired = true\n[[service.entities.fields]]\nname = "age"\nscalar = "Int"\nrequired = false\n[[service.entities.fields]]\nname = "married"\nscalar = "Boolean"\nrequired = true\n[[service.entities.fields]]\nname = "friends"\nscalar = "ObjectID"\nrequired = false\nlist = true\nas_type = "user"\njoin_on = "_id"\n[[service.entities.fields]]\nname = "fav_coffees"\nscalar = "Int"\nrequired = false\nas_type = "Coffee"\nlist = true\njoin_on = "id"\n[[service.entities.fields]]\nname = "todos"\nscalar = "Int"\nrequired = false\nas_type = "todo"\nlist = true\njoin_on = "id"\n[[service.entities.fields]]\nname = "todo"\nscalar = "Int"\nrequired = false\nas_type = "todo"\njoin_on = "id"\n\n[[service.entities]]\nname = "Coffee"\n[service.entities.data_source]\nfrom = "coffee_data_source"\n[[service.entities.fields]]\nname = "id"\nscalar= "Int"\nrequired = true\nexclude_from_input = ["CreateOne", "UpdateOne", "UpdateMany"]\n[[service.entities.fields]]\nname = "name"\nscalar = "String"\nrequired = true\n[[service.entities.fields]]\nname = "price"\nscalar = "Int"\nrequired = true\n[[service.entities.fields]]\nname = "available"\nscalar = "Boolean"\nrequired = true\n\n[[service.entities]]\nname = "todo"\n[service.entities.data_source]\nfrom = "todos"\npath = "/todos"\n[service.entities.data_source.resolvers]\n[service.entities.data_source.resolvers.find_one]\npath = "/:id"\n[service.entities.data_source.resolvers.find_many]\nsearch_query = [["userId", ":userId"], ["completed", ":completed"], ["id", ":id"]]\n[[service.entities.fields]]\nname = "userId"\nscalar = "Int"\nrequired = true\n[[service.entities.fields]]\nname = "id"\nscalar = "Int"\nrequired = true\n[[service.entities.fields]]\nname = "title"\nscalar = "String"\nrequired = true\n[[service.entities.fields]]\nname = "completed"\nscalar = "Boolean"\nrequired = true\n'})})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>o});var t=s(6540);const i={},r=t.createContext(i);function a(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);