<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>The Devoyage Blog</title>
        <link>https://www.thedevoyage.com/blog</link>
        <description>The Devoyage Blog</description>
        <lastBuildDate>Sun, 18 Jun 2023 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Subgraph v0.0.9 - Instant GraphQL API - Joined Types and Guards]]></title>
            <link>https://www.thedevoyage.com/blog/subgraph-v0.0.9-joins-and-guards</link>
            <guid>subgraph-v0.0.9-joins-and-guards</guid>
            <pubDate>Sun, 18 Jun 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Joining types and guards now available for Subgraph, an instant dynamic API.]]></description>
            <content:encoded><![CDATA[<p>Hello All! Thanks for Joining!</p><p>Today, I am super excited to share the most recent update for Subgraph, an application written in Rust that creates an Instant GraphQL API.</p><p>Here is the low down: Provide a simple configuration, spin it up, and send those network requests. Your API is running in minutes not
months saving you time and money.</p><p>This dynamic application gets fed a configuration file to describe your data in order to instantly spin up a usable GraphQL Server. Version <code>v0.0.9</code>
takes a few huge steps to make your API even more powerful with Joins and Guards.</p><p>Let's take a look at the new features and write a quick API in order to demonstrate how Subgraph can benefit your next project.</p><p><img loading="lazy" src="https://res.cloudinary.com/the-devoyage/image/upload/v1687224196/Subgraph_1_swkuzy.png" alt="Subgraph SQL" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="guards-joins-and-the-new-stuff">Guards, Joins, and the New Stuff<a class="hash-link" href="#guards-joins-and-the-new-stuff" title="Direct link to heading">​</a></h2><p>Version v0.0.9 introduces a diverse range of new capabilities, improvements, and fixes. Among these are two exciting features called Guards and Joins, designed
to empower you in building a robust API for any upcoming project.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="guards-alpha-release">Guards (alpha release)<a class="hash-link" href="#guards-alpha-release" title="Direct link to heading">​</a></h3><p>Protecting your API is a must and Subgraph aims to make it easy to guard your data from a variety of prospectives. The first version of
guards allows you to block access at four different points in the life cycle of a request by writing simple boolean evaluations. No complex
logic, framework, or code needed.</p><ol><li>Service Guards - Stop access to the entire server.</li><li>Resolver Guards - Prevent access on a per operation basis.</li><li>Entity Guards - Protect specific entities of your service.</li><li>Field Guards - Scope access down to a field of an entity.</li></ol><p>As mentioned above, guards are boolean evaluations that are simple to write. Evaluate a truthy condition and the access to the server is blocked with
custom error messages. Let's take a look at defining a service with a simple guard.</p><div class="language-toml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#d6deeb;--prism-background-color:#011627"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-toml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#d6deeb"><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token table class-name" style="color:rgb(255, 203, 139)">service</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">service_name</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"coffee_shops"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token table class-name" style="color:rgb(255, 203, 139)">service.guards</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">name</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"role"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">if_expr</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"headers(\"role\") != \"Admin\""</span><span class="token plain"> </span><span class="token comment" style="color:rgb(99, 119, 119);font-style:italic"># When true, we block access to the entire server.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">then_msg</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"Invalid Role - You may not request from this service."</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>As you can see above with the <code>headers()</code> function, there are built-in methods to access datapoints that are useful for validating access. Currently,
you can access <code>header</code> values as well as <code>input</code> (the GraphQL input itself) values. The guards feature is an alpha release with plans to
include other built-in methods such as <code>entity</code> values! Keep tuned as these are developed and rolled out.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="joins">Joins<a class="hash-link" href="#joins" title="Direct link to heading">​</a></h3><p>Maybe one of the more exciting features for <code>v0.0.9</code>, joins allow you to connect entities together quickly and easily bringing the power of GraphQL
into the simplicity of the Subgraph config.</p><p>First, define a few entities in the config file. Our comment entity below will have a property called <code>created_by</code> which will
join to a user type.</p><div class="language-toml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#d6deeb;--prism-background-color:#011627"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-toml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#d6deeb"><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token table class-name" style="color:rgb(255, 203, 139)">service</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">service_name</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"my_subgraph"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token table class-name" style="color:rgb(255, 203, 139)">service.entities</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">name</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"User"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">fields</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"> </span><span class="token key property" style="color:rgb(128, 203, 196)">name</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"_id"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token key property" style="color:rgb(128, 203, 196)">scalar</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"ObjectID"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token key property" style="color:rgb(128, 203, 196)">required</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 88, 116)">true</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"> </span><span class="token key property" style="color:rgb(128, 203, 196)">name</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"name"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token key property" style="color:rgb(128, 203, 196)">scalar</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"String"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token key property" style="color:rgb(128, 203, 196)">required</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 88, 116)">true</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token table class-name" style="color:rgb(255, 203, 139)">service.entities</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">name</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"Comment"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">fields</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"> </span><span class="token key property" style="color:rgb(128, 203, 196)">name</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"_id"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token key property" style="color:rgb(128, 203, 196)">scalar</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"ObjectID"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token key property" style="color:rgb(128, 203, 196)">required</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 88, 116)">true</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"> </span><span class="token key property" style="color:rgb(128, 203, 196)">name</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"content"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token key property" style="color:rgb(128, 203, 196)">scalar</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"String"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token key property" style="color:rgb(128, 203, 196)">required</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 88, 116)">true</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"> </span><span class="token key property" style="color:rgb(128, 203, 196)">name</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"created_by"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token key property" style="color:rgb(128, 203, 196)">scalar</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"ObjectID"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token key property" style="color:rgb(128, 203, 196)">required</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 88, 116)">true</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Now we just need to tell Subgraph to join the <code>created_by</code> field of the <code>Comment</code> to the <code>User</code>. Simply update the field definition and Subgraph
handles the rest.</p><div class="language-toml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#d6deeb;--prism-background-color:#011627"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-toml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#d6deeb"><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"> </span><span class="token key property" style="color:rgb(128, 203, 196)">name</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"created_by"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token key property" style="color:rgb(128, 203, 196)">scalar</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"ObjectID"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token key property" style="color:rgb(128, 203, 196)">required</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 88, 116)">true</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token key property" style="color:rgb(128, 203, 196)">as_type</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"User"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token key property" style="color:rgb(128, 203, 196)">join_on</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"_id"</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Send the network request and you now are able to instantly grab the <code>User</code> that created each comment.</p><p>Example Response:</p><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#d6deeb;--prism-background-color:#011627"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#d6deeb"><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">  </span><span class="token property" style="color:rgb(128, 203, 196)">"_id"</span><span class="token operator" style="color:rgb(127, 219, 202)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"54321"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">  </span><span class="token property" style="color:rgb(128, 203, 196)">"content"</span><span class="token operator" style="color:rgb(127, 219, 202)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"Joining data is simple!"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">  </span><span class="token property" style="color:rgb(128, 203, 196)">"created_by"</span><span class="token operator" style="color:rgb(127, 219, 202)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">    </span><span class="token property" style="color:rgb(128, 203, 196)">"_id"</span><span class="token operator" style="color:rgb(127, 219, 202)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"12345"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">    </span><span class="token property" style="color:rgb(128, 203, 196)">"name"</span><span class="token operator" style="color:rgb(127, 219, 202)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"Bongo"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Joins can be applied to any entity in a Subgraph from any data source. This means you can join SqLite to Mongo or Postgres to an
external HTTP API. Associating entities simple and easy without the headache is the idea!</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="spin-it-up">Spin It Up<a class="hash-link" href="#spin-it-up" title="Direct link to heading">​</a></h2><p>Believe it or not, the above configuration is just about complete.</p><p>Subgraph only needs to know two things at minimum
including where your data lives and what your data looks like. The entities above describe what the data looks like, so let's add
the configuration to inform Subgraph of where your data lives.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="the-data-source">The Data Source<a class="hash-link" href="#the-data-source" title="Direct link to heading">​</a></h3><p>Subgraph supports five different data sources, meaning you can pull in data from five different types of data interfaces. It supports MongoDB, MySQL,
Postgres, SQLite, and HTTP Data sources (external third party APIs). Today we will use a Mongo Database.</p><p>Add the Data Source to the configuration and Subgraph will automatically connect each entity to the first available configuration. Of course,
if you have multiple data sources, you can associate each entity with the appropriate data source.</p><div class="language-toml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#d6deeb;--prism-background-color:#011627"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-toml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#d6deeb"><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token table class-name" style="color:rgb(255, 203, 139)">service.data_sources</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token table class-name" style="color:rgb(255, 203, 139)">service.data_sources.Mongo</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">name</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"my_data_source"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">uri</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"mongodb://user:password@127.0.0.1:27017/db_name"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">db</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"db_name"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="start-the-api">Start the API<a class="hash-link" href="#start-the-api" title="Direct link to heading">​</a></h3><p>Once added, run the command to start your API. To view the Sandbox, use your browser to navigate to the port that you used to start the service.</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#d6deeb;--prism-background-color:#011627"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#d6deeb"><span class="token plain">subgraph -c ./my_config.toml -p </span><span class="token number" style="color:rgb(247, 140, 108)">5000</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Sandbox would be available at <code>http://localhost:5000</code> in the browser.</p><p>Feel free to define the port in your config file to save time!</p><div class="language-toml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#d6deeb;--prism-background-color:#011627"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-toml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#d6deeb"><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token table class-name" style="color:rgb(255, 203, 139)">service</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">service_name</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"my_subgraph"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">port</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">5000</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="example-configurations">Example Configurations<a class="hash-link" href="#example-configurations" title="Direct link to heading">​</a></h3><p>Like many Rust projects out there, Subgraph provides a folder of example configurations that you can use as reference to write your own!</p><p>Check out these <a href="https://github.com/The-Devoyage/subgraph/tree/master/examples" target="_blank" rel="noopener noreferrer">Example Configurations</a>. The configuration file is currently required
to be written in TOML or Tom's Obvious Minimal Language. Feel free to reference the <a href="https://toml.io/en/" target="_blank" rel="noopener noreferrer">TOML Documentation</a> if needed.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="wrapping-up---whats-next">Wrapping Up - What's Next?<a class="hash-link" href="#wrapping-up---whats-next" title="Direct link to heading">​</a></h2><p>Thanks for taking a moment to check out the new features! If you are interested in spinning up your own Subgraph using the <code>@the-devoyage/subgraph</code>
project, take a look at the documentation found in the <a href="https://www.github.com/the-devoyage/subgraph" target="_blank" rel="noopener noreferrer">Repository</a>. If you find this project
intriguing, consider starring the repository to express your support.</p><p>The next version is already under way with an extremely important update -- Integration Testing will allow us to increase quality and consistency between releases
allowing you to depend Subgraph on the next level. Up on deck includes delete resolvers and improvements to guards/authorization/authentication!</p><p>Lastly, if you are interested in the project, we have officially launched a support option on Gumroad! This provides an excellent opportunity for you to contribute
to the progression towards Version 1. We offer various levels of support, ranging from quick and easy donations to full-fledged feature requests.</p><div class="alert alert--info margin-vert--lg" style="display:flex;justify-content:space-between;align-items:center">Want to support `@the-devoyage/<!-- -->subgraph<!-- -->`?<a href="https://thedevoyage.gumroad.com/l/subgraph" target="_blank" rel="noopener noreferrer"><button class="button button--primary">Support on Gumroad</button></a></div><p>Again -- Thanks for taking a few minutes to check out the new features and following along!</p>]]></content:encoded>
            <category>subgraph</category>
        </item>
        <item>
            <title><![CDATA[Three Fancy Bash Directory Jumpers to "Avoid The Path"]]></title>
            <link>https://www.thedevoyage.com/blog/fancy-bash-directory-jumpers</link>
            <guid>fancy-bash-directory-jumpers</guid>
            <pubDate>Fri, 12 May 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Avoid typing the path when changing directories in the terminal. These directory jumpers can help you quickly and easily change directories and are just fun to customize.]]></description>
            <content:encoded><![CDATA[<p>Hello All, Thanks for Joining!</p><p>Today, I'd love to share a quick little bash script that helps you change directories quickly and easily. We will be trying our hardest to "Avoid The Path", meaning we won't be typing out lengthy paths when changing directories.</p><p>As developers, we are constantly jumping into and out of directories, spinning up environments in different locations, or even to grabbing a quick reference from another project. Doing such tasks from the command line usually provides power that a GUI just might not have, making it worth the effort to stay in the terminal.</p><p>So, let's take a look at some fancy ways to "avoid the path"!</p><p><img loading="lazy" src="https://res.cloudinary.com/the-devoyage/image/upload/v1684007203/cd_DesktopDevelopmentOrganizationProject_1_ao2lhc.png" alt="Avoid The Path" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="three-levels-of-fancy-bash-directory-jumpers">Three Levels of Fancy Bash Directory Jumpers<a class="hash-link" href="#three-levels-of-fancy-bash-directory-jumpers" title="Direct link to heading">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="the-least-fancy">The Least Fancy<a class="hash-link" href="#the-least-fancy" title="Direct link to heading">​</a></h3><p>For the longest of time I was happy with the simplest solution, a quick bash alias. The number of projects on my computer were few in numbers, so this solution made a ton of sense.</p><p>Setting an alias is quick and easy. Simply add the alias to your bash profile, which is a file in the home directory of your computer. This file name might differ depending on your shell and configuration. That being said, some of the most common names for these settings files are <code>.bashrc</code>, <code>.bash_profile</code>, or even <code>.bash_aliases</code>.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#d6deeb;--prism-background-color:#011627"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#d6deeb"><span class="token plain"># .bashrc</span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"># Typing "DEV" into the command line will now change directories</span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"># to a specified path.</span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">alias DEV=`cd ~/Desktop/DEV`</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You'll need to source the file that was changed, which will tell the shell that something new is available. You can do this by restarting the terminal or simply running <code>source .bashrc</code>, inserting the appropriate file name. Once sourced, your new alias will be ready to use.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#d6deeb;--prism-background-color:#011627"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#d6deeb"><span class="token plain">nickisyourfan@system76:~$ DEV</span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">nickisyourfan@system76:~/Desktop/DEV$</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>In the terminal, you can now use your alias from any directory to jump back to your development directory.</p><p>Avoid The Path - Win!</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="a-little-fancy">A Little Fancy<a class="hash-link" href="#a-little-fancy" title="Direct link to heading">​</a></h3><p>As time passes, you'll accumulate numerous projects in your development directory. It's the nature of the beast. And, as a developer you'll eventually find yourself sitting on the couch late at night trying to avoid doing the work you need to do in favor of writing a new function to help you improve your existing and perfectly fine way of jumping between directories.</p><p>We can convert our alias into a function that is callalble from the command line. It's extreemly easy and can even take in arguments!</p><p>Our function below will be called just like the bash alias above, simply type the given name, in our case <code>DEV</code>. This time it's going to take an optional second word/argument, which is the name of the folder of where you are changing to. For example, <code>DEV my-project</code>.</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#d6deeb;--prism-background-color:#011627"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#d6deeb"><span class="token comment" style="color:rgb(99, 119, 119);font-style:italic"># .bashrc</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token keyword" style="color:rgb(127, 219, 202)">function</span><span class="token plain"> </span><span class="token function-name function" style="color:rgb(130, 170, 255)">DEV</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">  </span><span class="token comment" style="color:rgb(99, 119, 119);font-style:italic"># If argument is not provided, go to the dev directory.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">  </span><span class="token comment" style="color:rgb(99, 119, 119);font-style:italic"># Else go to the nested directory.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">  </span><span class="token keyword" style="color:rgb(127, 219, 202)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token plain"> -z </span><span class="token string" style="color:rgb(173, 219, 103)">"</span><span class="token string variable" style="color:rgb(214, 222, 235)">$1</span><span class="token string" style="color:rgb(173, 219, 103)">"</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(127, 219, 202)">then</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">    </span><span class="token builtin class-name" style="color:rgb(255, 203, 139)">cd</span><span class="token plain"> ~/Desktop/DEV</span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">  </span><span class="token keyword" style="color:rgb(127, 219, 202)">else</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">    </span><span class="token builtin class-name" style="color:rgb(255, 203, 139)">cd</span><span class="token plain"> ~/Desktop/DEV/</span><span class="token variable" style="color:rgb(214, 222, 235)">$1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">  </span><span class="token keyword" style="color:rgb(127, 219, 202)">fi</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Now we can jump into any project from any location by typing two words.</p><p>Source the file, then use the command and let's try it out.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#d6deeb;--prism-background-color:#011627"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#d6deeb"><span class="token plain">nickisyourfan@system76:~$ DEV my-project</span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">nickisyourfan@system76:~/Desktop/DEV/my-project$</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Avoid the Path -- Win!</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="a-bit-fancier">A Bit Fancier<a class="hash-link" href="#a-bit-fancier" title="Direct link to heading">​</a></h3><p>I know what you are thinking... We can do better!</p><p>I hope you are not in the middle of something important, because here is where procrastination becomes really hard to resist.</p><p>Our current script makes it easy to jump into our development directory and even somewhat into nested directories one level deep. If you are like me, some projects get organized into the nested folders, meaning that my projects directory is now several levels deep. The previous script just is not cut out to handle my directories structured like this.</p><p>Let's use some common functions to support finding of nested directories. This time, we take a more dynamic approach.</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#d6deeb;--prism-background-color:#011627"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#d6deeb"><span class="token keyword" style="color:rgb(127, 219, 202)">function</span><span class="token plain"> </span><span class="token function-name function" style="color:rgb(130, 170, 255)">DEV</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">  </span><span class="token comment" style="color:rgb(99, 119, 119);font-style:italic"># Set your variables such as the directory to search and how many levels deep to search.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">  </span><span class="token builtin class-name" style="color:rgb(255, 203, 139)">local</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(214, 222, 235)">directory</span><span class="token operator" style="color:rgb(127, 219, 202)">=~</span><span class="token plain">/Desktop/DEV</span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">  </span><span class="token builtin class-name" style="color:rgb(255, 203, 139)">local</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(214, 222, 235)">levels_deep</span><span class="token operator" style="color:rgb(127, 219, 202)">=</span><span class="token number" style="color:rgb(247, 140, 108)">4</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">  </span><span class="token comment" style="color:rgb(99, 119, 119);font-style:italic"># If no args provided, cd into the directory.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">  </span><span class="token keyword" style="color:rgb(127, 219, 202)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token plain"> -z </span><span class="token string" style="color:rgb(173, 219, 103)">"</span><span class="token string variable" style="color:rgb(214, 222, 235)">$1</span><span class="token string" style="color:rgb(173, 219, 103)">"</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(127, 219, 202)">then</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">    </span><span class="token builtin class-name" style="color:rgb(255, 203, 139)">cd</span><span class="token plain"> </span><span class="token variable" style="color:rgb(214, 222, 235)">$directory</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">    </span><span class="token builtin class-name" style="color:rgb(255, 203, 139)">return</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">  </span><span class="token keyword" style="color:rgb(127, 219, 202)">fi</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">  </span><span class="token comment" style="color:rgb(99, 119, 119);font-style:italic"># Find all the directories that match the name provided in the argument.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">  </span><span class="token assign-left variable" style="color:rgb(214, 222, 235)">directories</span><span class="token operator" style="color:rgb(127, 219, 202)">=</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token variable" style="color:rgb(214, 222, 235)">$(</span><span class="token variable function" style="color:rgb(130, 170, 255)">find</span><span class="token variable" style="color:rgb(214, 222, 235)"> $directory -maxdepth $levels_deep -type d -name $1</span><span class="token variable" style="color:rgb(214, 222, 235)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">  </span><span class="token comment" style="color:rgb(99, 119, 119);font-style:italic"># If only one result, cd into that directory.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">  </span><span class="token comment" style="color:rgb(99, 119, 119);font-style:italic"># Else ask the user which directory they really want to go to.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">  </span><span class="token keyword" style="color:rgb(127, 219, 202)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token plain"> </span><span class="token variable" style="color:rgb(214, 222, 235)">${</span><span class="token variable operator" style="color:rgb(127, 219, 202)">#</span><span class="token variable" style="color:rgb(214, 222, 235)">directories</span><span class="token variable punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token variable" style="color:rgb(214, 222, 235)">@</span><span class="token variable punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token variable" style="color:rgb(214, 222, 235)">}</span><span class="token plain"> -eq </span><span class="token number" style="color:rgb(247, 140, 108)">1</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(127, 219, 202)">then</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">    </span><span class="token builtin class-name" style="color:rgb(255, 203, 139)">cd</span><span class="token plain"> </span><span class="token variable" style="color:rgb(214, 222, 235)">${directories</span><span class="token variable punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token variable" style="color:rgb(214, 222, 235)">0</span><span class="token variable punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token variable" style="color:rgb(214, 222, 235)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">  </span><span class="token keyword" style="color:rgb(127, 219, 202)">elif</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token plain"> </span><span class="token variable" style="color:rgb(214, 222, 235)">${</span><span class="token variable operator" style="color:rgb(127, 219, 202)">#</span><span class="token variable" style="color:rgb(214, 222, 235)">directories</span><span class="token variable punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token variable" style="color:rgb(214, 222, 235)">@</span><span class="token variable punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token variable" style="color:rgb(214, 222, 235)">}</span><span class="token plain"> -gt </span><span class="token number" style="color:rgb(247, 140, 108)">1</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(127, 219, 202)">then</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">    </span><span class="token builtin class-name" style="color:rgb(255, 203, 139)">echo</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"Which directory do you want to go to?"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">    </span><span class="token keyword" style="color:rgb(127, 219, 202)">for</span><span class="token plain"> </span><span class="token for-or-select variable" style="color:rgb(214, 222, 235)">i</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(127, 219, 202)">in</span><span class="token plain"> </span><span class="token variable" style="color:rgb(214, 222, 235)">${</span><span class="token variable operator" style="color:rgb(127, 219, 202)">!</span><span class="token variable" style="color:rgb(214, 222, 235)">directories</span><span class="token variable punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token variable" style="color:rgb(214, 222, 235)">@</span><span class="token variable punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token variable" style="color:rgb(214, 222, 235)">}</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(127, 219, 202)">do</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">      </span><span class="token builtin class-name" style="color:rgb(255, 203, 139)">echo</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"</span><span class="token string variable" style="color:rgb(214, 222, 235)">$i</span><span class="token string" style="color:rgb(173, 219, 103)">. </span><span class="token string variable" style="color:rgb(214, 222, 235)">${directories</span><span class="token string variable punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token string variable" style="color:rgb(214, 222, 235)">$i</span><span class="token string variable punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token string variable" style="color:rgb(214, 222, 235)">}</span><span class="token string" style="color:rgb(173, 219, 103)">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">    </span><span class="token keyword" style="color:rgb(127, 219, 202)">done</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">    </span><span class="token builtin class-name" style="color:rgb(255, 203, 139)">read</span><span class="token plain"> -p </span><span class="token string" style="color:rgb(173, 219, 103)">"Enter a number: "</span><span class="token plain"> choice</span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">    </span><span class="token builtin class-name" style="color:rgb(255, 203, 139)">cd</span><span class="token plain"> </span><span class="token variable" style="color:rgb(214, 222, 235)">${directories</span><span class="token variable punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token variable" style="color:rgb(214, 222, 235)">$choice</span><span class="token variable punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token variable" style="color:rgb(214, 222, 235)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">  </span><span class="token keyword" style="color:rgb(127, 219, 202)">else</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">    </span><span class="token builtin class-name" style="color:rgb(255, 203, 139)">echo</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"Directory does not exist"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">  </span><span class="token keyword" style="color:rgb(127, 219, 202)">fi</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Now we can jump to any directory... from anywhere... with ease!</p><p>Source the file and run the command just like before.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#d6deeb;--prism-background-color:#011627"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#d6deeb"><span class="token plain">nickisyourfan@system76:~$ DEV my-project</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Notice, I have two folders called <code>my-project</code>. It will ask me which one I want to change into before changing the directory for me.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#d6deeb;--prism-background-color:#011627"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#d6deeb"><span class="token plain">Which directory do you want to go to?</span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">0. /home/nickisyourfan/Desktop/DEV/@the-devoyage/my-project</span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">1. /home/nickisyourfan/Desktop/DEV/my-project</span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">Enter a number: 0</span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">nickisyourfan@system76:~/Desktop/DEV/@the-devoyage/my-project$</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Avoid the Path - Win!</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="the-most-fancy">The Most Fancy<a class="hash-link" href="#the-most-fancy" title="Direct link to heading">​</a></h3><p>To top off the script we are going to add an additional function that enable some super sweet auto complete.</p><p>Imagine... the name of the project you want to cd into is on the tip of your tongue but you just can't remember it's name. Instead of using the old trusty <code>ls</code> command and reading the dozens of incomplete projects, we can enable some tab completion to help us remember the name of the project/directory we are looking for.</p><p>Start by typing in the command, then press tab to get some suggestions.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#d6deeb;--prism-background-color:#011627"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#d6deeb"><span class="token plain">nickisyourfan@system76:~/Desktop/DEV/@the-devoyage/subgraph$ DEV my-proj</span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">my-project                         my-project-1                    my-project-2</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Auto complete is as simple as adding one more function to your bash profile.</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#d6deeb;--prism-background-color:#011627"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#d6deeb"><span class="token keyword" style="color:rgb(127, 219, 202)">function</span><span class="token plain"> </span><span class="token function-name function" style="color:rgb(130, 170, 255)">_dev_completion</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">  </span><span class="token builtin class-name" style="color:rgb(255, 203, 139)">local</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(214, 222, 235)">cur</span><span class="token operator" style="color:rgb(127, 219, 202)">=</span><span class="token variable" style="color:rgb(214, 222, 235)">${COMP_WORDS</span><span class="token variable punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token variable" style="color:rgb(214, 222, 235)">COMP_CWORD</span><span class="token variable punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token variable" style="color:rgb(214, 222, 235)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">  </span><span class="token builtin class-name" style="color:rgb(255, 203, 139)">local</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(214, 222, 235)">directory</span><span class="token operator" style="color:rgb(127, 219, 202)">=~</span><span class="token plain">/Desktop/DEV</span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">  </span><span class="token builtin class-name" style="color:rgb(255, 203, 139)">local</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(214, 222, 235)">levels_deep</span><span class="token operator" style="color:rgb(127, 219, 202)">=</span><span class="token number" style="color:rgb(247, 140, 108)">4</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">  </span><span class="token builtin class-name" style="color:rgb(255, 203, 139)">local</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(214, 222, 235)">subdirs</span><span class="token operator" style="color:rgb(127, 219, 202)">=</span><span class="token variable" style="color:rgb(214, 222, 235)">$(</span><span class="token variable function" style="color:rgb(130, 170, 255)">find</span><span class="token variable" style="color:rgb(214, 222, 235)"> </span><span class="token variable string" style="color:rgb(173, 219, 103)">"</span><span class="token variable string variable" style="color:rgb(214, 222, 235)">$directory</span><span class="token variable string" style="color:rgb(173, 219, 103)">"</span><span class="token variable" style="color:rgb(214, 222, 235)"> -maxdepth </span><span class="token variable string" style="color:rgb(173, 219, 103)">"</span><span class="token variable string variable" style="color:rgb(214, 222, 235)">$levels_deep</span><span class="token variable string" style="color:rgb(173, 219, 103)">"</span><span class="token variable" style="color:rgb(214, 222, 235)"> -type d -printf </span><span class="token variable string" style="color:rgb(173, 219, 103)">'%f\n'</span><span class="token variable" style="color:rgb(214, 222, 235)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">  </span><span class="token builtin class-name" style="color:rgb(255, 203, 139)">local</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(214, 222, 235)">options</span><span class="token operator" style="color:rgb(127, 219, 202)">=</span><span class="token variable" style="color:rgb(214, 222, 235)">$(</span><span class="token variable builtin class-name" style="color:rgb(255, 203, 139)">echo</span><span class="token variable" style="color:rgb(214, 222, 235)"> </span><span class="token variable string" style="color:rgb(173, 219, 103)">"</span><span class="token variable string variable" style="color:rgb(214, 222, 235)">$subdirs</span><span class="token variable string" style="color:rgb(173, 219, 103)">"</span><span class="token variable" style="color:rgb(214, 222, 235)"> </span><span class="token variable operator" style="color:rgb(127, 219, 202)">|</span><span class="token variable" style="color:rgb(214, 222, 235)"> </span><span class="token variable function" style="color:rgb(130, 170, 255)">grep</span><span class="token variable" style="color:rgb(214, 222, 235)"> </span><span class="token variable string" style="color:rgb(173, 219, 103)">"^</span><span class="token variable string variable" style="color:rgb(214, 222, 235)">$cur</span><span class="token variable string" style="color:rgb(173, 219, 103)">"</span><span class="token variable" style="color:rgb(214, 222, 235)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">  </span><span class="token assign-left variable" style="color:rgb(214, 222, 235)">COMPREPLY</span><span class="token operator" style="color:rgb(127, 219, 202)">=</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token plain"> </span><span class="token variable" style="color:rgb(214, 222, 235)">$(</span><span class="token variable" style="color:rgb(214, 222, 235)">compgen -W </span><span class="token variable string" style="color:rgb(173, 219, 103)">"</span><span class="token variable string variable" style="color:rgb(214, 222, 235)">$options</span><span class="token variable string" style="color:rgb(173, 219, 103)">"</span><span class="token variable" style="color:rgb(214, 222, 235)"> -- </span><span class="token variable string" style="color:rgb(173, 219, 103)">"</span><span class="token variable string variable" style="color:rgb(214, 222, 235)">$cur</span><span class="token variable string" style="color:rgb(173, 219, 103)">"</span><span class="token variable" style="color:rgb(214, 222, 235)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">  </span><span class="token builtin class-name" style="color:rgb(255, 203, 139)">return</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Following the previous DEV function, call the newly added function.</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#d6deeb;--prism-background-color:#011627"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#d6deeb"><span class="token keyword" style="color:rgb(127, 219, 202)">function</span><span class="token plain"> </span><span class="token function-name function" style="color:rgb(130, 170, 255)">DEV</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">  </span><span class="token comment" style="color:rgb(99, 119, 119);font-style:italic"># Logic to find and switch folders.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">complete -F _dev_completion DEV</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="a-great-friday-night">A Great Friday Night<a class="hash-link" href="#a-great-friday-night" title="Direct link to heading">​</a></h2><p>Thanks for joining me to procrastinate my Friday night away. It's been a fun time expanding and sharing this little directory jumper. It's far from perfect but it is easy to configure and gets the job done. Let me know what you'd add to up the fancy.</p><div class="alert alert--info margin-vert--lg" style="display:flex;justify-content:space-between;flex-direction:column"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--lg" href="https://medium.com/@thedevoyage"><img alt="Nick McLean Profile Image" src="https://cdn-images-1.medium.com/fit/c/63/63/1*TY45PiqMrWiUkivbhmp-Sw.jpeg"></a><div class="avatar__intro"><div class="avatar__name">Nick McLean</div><small class="avatar__subtitle padding-bottom--md">Thanks for following along. If you would like to keep up to date make sure to check in frequently and/or follow us below!</small><div><a href="https://medium.com/@thedevoyage" target="_blank" rel="noopener noreferrer"><button class="button button--primary margin-right--md">Medium</button></a><a href="https://twitter.com/thedevoyage" target="_blank" rel="noopener noreferrer"><button class="button button--primary margin-right--md">Twitter</button></a><a href="https://thedevoyage.slack.com" target="_blank" rel="noopener noreferrer"><button class="button button--primary margin-right--md">Slack</button></a></div></div></div></div>]]></content:encoded>
            <category>bash</category>
            <category>directory jumper</category>
            <category>cd</category>
            <category>change directory</category>
        </item>
        <item>
            <title><![CDATA[Subgraph v0.0.8 - Instant SQL API with Subgraph]]></title>
            <link>https://www.thedevoyage.com/blog/subgraph-v0.0.8-instant-sql-api</link>
            <guid>subgraph-v0.0.8-instant-sql-api</guid>
            <pubDate>Mon, 01 May 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Create a nearly instant API for your SQL Database with Subgraph v0.0.8.]]></description>
            <content:encoded><![CDATA[<p>Hello All, Thanks for Joining!</p><p>Today we are creating instant APIs around SQL Databases of various dialects with Subgraph, a proof
of concept tool that is made to assist speedy API development.</p><p>All it takes to use subgraph is a config file that informs the service where your data is and what your data looks like. Define the
config and start the API to create an instant API around your database.</p><p>With the latest release, v0.0.8, we are taking a look at the newly added support for a few dialects of SQL. In addition to
Mongo and HTTP Data Sources, Subgraph now supports Postgres, MySQL, and SqLite. Let's take a minute and spin up a new
API from scratch!</p><p><img loading="lazy" src="https://res.cloudinary.com/the-devoyage/image/upload/v1683081810/Subgraph_SQL_kteswo.png" alt="Subgraph SQL" class="img_ev3q"></p><p>Check out the <a href="https://www.github.com/the-devoyage/subgrpah" target="_blank" rel="noopener noreferrer">repo</a>!</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="build-a-quick-api-for-your-sql-database">Build a Quick API for your SQL Database<a class="hash-link" href="#build-a-quick-api-for-your-sql-database" title="Direct link to heading">​</a></h2><p>The goal with subgraph is pretty simple - Shorten the time it takes to plan, develop, and deploy an API. With subgraph,
we do not need to write routes, controllers, or resolvers from scratch. We do not need to deal with boiler plate, database
connections, or even validation.</p><p>All we need to do is tell the Subgraph service where our data is and what it looks like. Subgraph takes care of the rest by
connecting to the database and creating the routes/resolvers. With this, you now can spend your time on the parts of
your business that might make a larger impact for your clients and sales.</p><p>Let's see an example!</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-create-the-database">1. Create the Database<a class="hash-link" href="#1-create-the-database" title="Direct link to heading">​</a></h3><p>You own the database. You get to choose what type of database is best suited for your project. As mentioned above,
Subgraph supports Mongo, Postgres, MySQL, and SqLite databases, making it easy for you to connect to your data.</p><p>In this example we will create a SqLite DB and use Subgraph to generate an API around a few tables. Keep in mind, that connecting Subgraph
to MySQL, Postgres, or even Mongo, is a very similar process.</p><p>First, make sure you have SqLite installed on your system. The following guide is going to assume you are on a Linux machine.</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#d6deeb;--prism-background-color:#011627"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#d6deeb"><span class="token function" style="color:rgb(130, 170, 255)">sudo</span><span class="token plain"> </span><span class="token function" style="color:rgb(130, 170, 255)">apt</span><span class="token plain"> </span><span class="token function" style="color:rgb(130, 170, 255)">install</span><span class="token plain"> sqlite3</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Creating a SqLite Database is as easy as creating a file in a folder. Let's create a database around Coffees!</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#d6deeb;--prism-background-color:#011627"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#d6deeb"><span class="token plain">touch caffeine.db</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Now, let's create a couple tables.</p><div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#d6deeb;--prism-background-color:#011627"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#d6deeb"><span class="token keyword" style="color:rgb(127, 219, 202)">CREATE</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(127, 219, 202)">TABLE</span><span class="token plain"> coffee </span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">  id </span><span class="token keyword" style="color:rgb(127, 219, 202)">INTEGER</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(127, 219, 202)">PRIMARY</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(127, 219, 202)">KEY</span><span class="token plain"> AUTOINCREMENT</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">  name </span><span class="token keyword" style="color:rgb(127, 219, 202)">TEXT</span><span class="token plain"> </span><span class="token operator" style="color:rgb(127, 219, 202)">NOT</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 88, 116)">NULL</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">  price </span><span class="token keyword" style="color:rgb(127, 219, 202)">INTEGER</span><span class="token plain"> </span><span class="token operator" style="color:rgb(127, 219, 202)">NOT</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 88, 116)">NULL</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">  available </span><span class="token keyword" style="color:rgb(127, 219, 202)">BOOLEAN</span><span class="token plain"> </span><span class="token operator" style="color:rgb(127, 219, 202)">NOT</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 88, 116)">NULL</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token keyword" style="color:rgb(127, 219, 202)">CREATE</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(127, 219, 202)">TABLE</span><span class="token plain"> espresso </span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">  id </span><span class="token keyword" style="color:rgb(127, 219, 202)">INTEGER</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(127, 219, 202)">PRIMARY</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(127, 219, 202)">KEY</span><span class="token plain"> AUTOINCREMENT</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">  name </span><span class="token keyword" style="color:rgb(127, 219, 202)">TEXT</span><span class="token plain"> </span><span class="token operator" style="color:rgb(127, 219, 202)">NOT</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 88, 116)">NULL</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">  price </span><span class="token keyword" style="color:rgb(127, 219, 202)">INTEGER</span><span class="token plain"> </span><span class="token operator" style="color:rgb(127, 219, 202)">NOT</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 88, 116)">NULL</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">  available </span><span class="token keyword" style="color:rgb(127, 219, 202)">BOOLEAN</span><span class="token plain"> </span><span class="token operator" style="color:rgb(127, 219, 202)">NOT</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 88, 116)">NULL</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>This is all we will need to do to get started. We can now move on to Subgraph specific setup.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-write-the-subgraph-config">2. Write the Subgraph Config<a class="hash-link" href="#2-write-the-subgraph-config" title="Direct link to heading">​</a></h3><p>The config is all about your data. It tells Subgraph where to find your data and what it looks like. Writing the config file is
easy, as it uses <a href="https://toml.io/en/" target="_blank" rel="noopener noreferrer">TOML or Tom's Obvious Minimal Language</a>.</p><p>Let's start by telling Subgraph where the data is. To do this, add a <code>Data Source</code> to the configuration. You can add
multiple data sources, mix and match data sources, or just keep it basic with a single data source.</p><div class="language-toml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#d6deeb;--prism-background-color:#011627"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-toml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#d6deeb"><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token table class-name" style="color:rgb(255, 203, 139)">service</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">service_name</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"espresso"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token table class-name" style="color:rgb(255, 203, 139)">service.data_sources</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token table class-name" style="color:rgb(255, 203, 139)">service.data_sources.SQL</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">name</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"caffeine_data_source"</span><span class="token plain"> </span><span class="token comment" style="color:rgb(99, 119, 119);font-style:italic"># Name the data source for reference later.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">uri</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"sqlite:/home/nickisyourfan/Desktop/DEV/dbs/caffeine.db"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">dialect</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"SQLITE"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Now that Subgraph knows where the data is, we can inform subgraph what our data looks like. Start by defining an entity for each table. An
Entity is a table in the database (collection for Mongo).</p><div class="language-toml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#d6deeb;--prism-background-color:#011627"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-toml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#d6deeb"><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token table class-name" style="color:rgb(255, 203, 139)">service.entities</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">name</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"Espresso"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>In this case, the <code>Espresso</code> table has four columns. Let's tell Subgraph.</p><div class="language-toml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#d6deeb;--prism-background-color:#011627"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-toml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#d6deeb"><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token table class-name" style="color:rgb(255, 203, 139)">service.entities.fields</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">name</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"id"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">scalar</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"Int"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">required</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 88, 116)">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">exclude_from_input</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token string" style="color:rgb(173, 219, 103)">"CreateOne"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"UpdateOne"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"UpdateMany"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"> </span><span class="token comment" style="color:rgb(99, 119, 119);font-style:italic"># Don't allow uses to create or update the ID prop.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token table class-name" style="color:rgb(255, 203, 139)">service.entities.fields</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">name</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"name"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">scalar</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"String"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">required</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 88, 116)">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token table class-name" style="color:rgb(255, 203, 139)">service.entities.fields</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">name</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"price"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">scalar</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"Int"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">required</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 88, 116)">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token table class-name" style="color:rgb(255, 203, 139)">service.entities.fields</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">name</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"available"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">scalar</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"Boolean"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">required</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 88, 116)">true</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>That's it! Let's do the same for the coffee table and take a look at the finished config.</p><div class="language-toml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#d6deeb;--prism-background-color:#011627"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-toml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#d6deeb"><span class="token comment" style="color:rgb(99, 119, 119);font-style:italic"># The Finished Configuration:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token table class-name" style="color:rgb(255, 203, 139)">service</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">service_name</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"espresso"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token table class-name" style="color:rgb(255, 203, 139)">service.data_sources</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token table class-name" style="color:rgb(255, 203, 139)">service.data_sources.SQL</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">name</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"caffeine_data_source"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">uri</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"sqlite:/home/nickisyourfan/Desktop/DEV/dbs/caffeine.db"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">dialect</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"SQLITE"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token table class-name" style="color:rgb(255, 203, 139)">service.entities</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">name</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"Coffee"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token table class-name" style="color:rgb(255, 203, 139)">service.entities.fields</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">name</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"id"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">scalar</span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"Int"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">required</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 88, 116)">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">exclude_from_input</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token string" style="color:rgb(173, 219, 103)">"CreateOne"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"UpdateOne"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"UpdateMany"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token table class-name" style="color:rgb(255, 203, 139)">service.entities.fields</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">name</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"name"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">scalar</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"String"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">required</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 88, 116)">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token table class-name" style="color:rgb(255, 203, 139)">service.entities.fields</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">name</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"price"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">scalar</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"Int"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">required</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 88, 116)">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token table class-name" style="color:rgb(255, 203, 139)">service.entities.fields</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">name</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"available"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">scalar</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"Boolean"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">required</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 88, 116)">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token table class-name" style="color:rgb(255, 203, 139)">service.entities</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">name</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"Espresso"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token table class-name" style="color:rgb(255, 203, 139)">service.entities.fields</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">name</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"id"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">scalar</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"Int"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">required</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 88, 116)">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">exclude_from_input</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token string" style="color:rgb(173, 219, 103)">"CreateOne"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"UpdateOne"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"UpdateMany"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token table class-name" style="color:rgb(255, 203, 139)">service.entities.fields</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">name</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"name"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">scalar</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"String"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">required</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 88, 116)">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token table class-name" style="color:rgb(255, 203, 139)">service.entities.fields</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">name</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"price"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">scalar</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"Int"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">required</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 88, 116)">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token table class-name" style="color:rgb(255, 203, 139)">service.entities.fields</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">name</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"available"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">scalar</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"Boolean"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">required</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 88, 116)">true</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-start-the-api">3. Start the API<a class="hash-link" href="#3-start-the-api" title="Direct link to heading">​</a></h3><p>In the previous step, we defined a Subgraph Configuration that tells the service about the data. The hard part is done in
about 50 lines of code. Now, let's start the service.</p><p>First, make sure you downloaded the latest release (v0.0.8). The release is a binary, making it easy to run on a linux system.
Just make sure to give it execution permissions.</p><p>Checkout the <a href="https://github.com/The-Devoyage/subgraph/releases" target="_blank" rel="noopener noreferrer">releases</a> page on GitHub to download the binary.</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#d6deeb;--prism-background-color:#011627"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#d6deeb"><span class="token function" style="color:rgb(130, 170, 255)">chmod</span><span class="token plain"> +x subgraph</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Then, run subgraph and point it to your config file.</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#d6deeb;--prism-background-color:#011627"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#d6deeb"><span class="token plain">./subgraph --config ./caffeine.toml --port </span><span class="token number" style="color:rgb(247, 140, 108)">3030</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>And that's it! Your new API is now running at the port specified. We can load up the playground and send some queries.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="4-query-the-api">4. Query the API<a class="hash-link" href="#4-query-the-api" title="Direct link to heading">​</a></h3><p>Load the playground at the specified port. The playground will let you construct and execute queries against your new API.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#d6deeb;--prism-background-color:#011627"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#d6deeb"><span class="token plain"># Navigate In Browser:</span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">http://localhost:3030</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Once loaded, drop in a mutation to insert a new espresso into the espresso table.</p><div class="language-graphql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#d6deeb;--prism-background-color:#011627"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-graphql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#d6deeb"><span class="token keyword" style="color:rgb(127, 219, 202)">mutation</span><span class="token plain"> </span><span class="token definition-mutation function" style="color:rgb(130, 170, 255)">createEspresso</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token variable variable-input" style="color:rgb(214, 222, 235)">$input</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"> </span><span class="token property" style="color:rgb(128, 203, 196)">create_espresso_input</span><span class="token operator" style="color:rgb(127, 219, 202)">!</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">  </span><span class="token property-query property-mutation">create_espresso</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token attr-name" style="color:rgb(173, 219, 103);font-style:italic">create_espresso_input</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"> </span><span class="token variable variable-input" style="color:rgb(214, 222, 235)">$input</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">    </span><span class="token property" style="color:rgb(128, 203, 196)">id</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">    </span><span class="token property" style="color:rgb(128, 203, 196)">name</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">    </span><span class="token property" style="color:rgb(128, 203, 196)">price</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">    </span><span class="token property" style="color:rgb(128, 203, 196)">available</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">  </span><span class="token string" style="color:rgb(173, 219, 103)">"input"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">    </span><span class="token string" style="color:rgb(173, 219, 103)">"name"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"Katz Coffee"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">    </span><span class="token string" style="color:rgb(173, 219, 103)">"price"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">15</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">    </span><span class="token string" style="color:rgb(173, 219, 103)">"available"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 88, 116)">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Subgraph creates resolvers for each entity, making it easy for you to query the database. Currently, Subgraph supports
Find One, Find Many, Update One, Update Many, and Create One resolvers. Delete operations coming soon!</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="subgraph-v008">Subgraph v0.0.8<a class="hash-link" href="#subgraph-v008" title="Direct link to heading">​</a></h2><p>Thanks for checking in on the progress. There is a lot of work to do in order to get to v1, a production ready environment!</p><p>If you are a curios rusteacean and want to jump in, please feel free to check out the <a href="https://www.github.com/the-devoyage/subgraph" target="_blank" rel="noopener noreferrer">source code</a>,
and share your ideas about the future of the project.</p><p>Upcoming projects include Delete Operations, Authorization Support, Testing Integrations, Federation 2 Support, and Error Handling! Thanks
for keeping tuned and following along.</p><div class="alert alert--info margin-vert--lg" style="display:flex;justify-content:space-between;flex-direction:column"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--lg" href="https://medium.com/@thedevoyage"><img alt="Nick McLean Profile Image" src="https://cdn-images-1.medium.com/fit/c/63/63/1*TY45PiqMrWiUkivbhmp-Sw.jpeg"></a><div class="avatar__intro"><div class="avatar__name">Nick McLean</div><small class="avatar__subtitle padding-bottom--md">Thanks for following along. If you would like to keep up to date make sure to check in frequently and/or follow us below!</small><div><a href="https://medium.com/@thedevoyage" target="_blank" rel="noopener noreferrer"><button class="button button--primary margin-right--md">Medium</button></a><a href="https://twitter.com/thedevoyage" target="_blank" rel="noopener noreferrer"><button class="button button--primary margin-right--md">Twitter</button></a><a href="https://thedevoyage.slack.com" target="_blank" rel="noopener noreferrer"><button class="button button--primary margin-right--md">Slack</button></a></div></div></div></div>]]></content:encoded>
            <category>subgraph</category>
        </item>
        <item>
            <title><![CDATA[Subgraph v0.0.7 - Instant Chat GPT GraphQL API]]></title>
            <link>https://www.thedevoyage.com/blog/subgraph-v0.0.7-http-with-chat-gpt</link>
            <guid>subgraph-v0.0.7-http-with-chat-gpt</guid>
            <pubDate>Fri, 14 Apr 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Hello all -- Thanks for joining!]]></description>
            <content:encoded><![CDATA[<p>Hello all -- Thanks for joining!</p><p>Today we are going to use the Chat GPT API to show off the newest release from the subgraph project, which is a tool built to help you start up a well rounded API in a matter of minutes.</p><p>The <a href="https://www.github.com/the-devoyage/subgraph" target="_blank" rel="noopener noreferrer">@The-Devoyage/subgraph</a> project is a proof-of-concept implementation written in Rust for generating a dynamic API from a single
configuration/schema.
The subgraph allows you to define entities, data sources, and resolvers in a single TOML configuration.</p><p>The configuration specifies how the API should be generated around the data you need, existing or not. Subgraph generates CRUD operations from the entities you define and allows you
to connect many data sources to a single API, including HTTP and MongoDB (SQL support coming in the future!). In this way, you can create an API in no time, which can be used to
manipulate and find data, and even map third-party RESTful APIs to GraphQL automatically.</p><p>Let's dive into the new HTTP Data Source configurations which will allow us to connect to almost any third party RESTful API, such as the Chat GPT API.</p><p><img loading="lazy" src="https://res.cloudinary.com/the-devoyage/image/upload/v1681523977/Subgraph_Logo_2_gff26m.png" alt="Subgraph" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="v007-and-the-chat-gpt-api">v0.0.7 and the Chat GPT API<a class="hash-link" href="#v007-and-the-chat-gpt-api" title="Direct link to heading">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="http-data-source">HTTP Data Source<a class="hash-link" href="#http-data-source" title="Direct link to heading">​</a></h3><p>The HTTP data source is a powerful feature in Subgraph that enables data retrieval from external APIs. With this data source, you can easily connect your Subgraph GraphQL server to any REST API and map the API endpoints to
your GraphQL schema. This allows you to consolidate data from multiple sources into a single GraphQL endpoint. The HTTP data source provides various methods to retrieve data, such as GET, POST, PUT, PATCH, DELETE,
and allows for custom headers to be set. This feature simplifies the process of fetching data from external sources and reduces the amount of boilerplate code needed.</p><div class="language-toml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#d6deeb;--prism-background-color:#011627"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-toml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#d6deeb"><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token table class-name" style="color:rgb(255, 203, 139)">service.data_sources</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token table class-name" style="color:rgb(255, 203, 139)">service.data_sources.HTTP</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">name</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"chat_gpt"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">url</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"https://api.openai.com/"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">default_headers</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"> </span><span class="token key property" style="color:rgb(128, 203, 196)">name</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"Authorization"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token key property" style="color:rgb(128, 203, 196)">value</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"Bearer $OPENAI_KEY"</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="object-support">Object Support<a class="hash-link" href="#object-support" title="Direct link to heading">​</a></h3><p>In Subgraph, Scalars are the primitive data types such as String, Int, and Boolean. However, there are situations where we need to represent more complex types or groupings of primitive Scalars. This is where Object types come into play.
An Object "Scalar" is a custom type that can be defined in the configuration for the schema, representing a complex type that can be used as a type itself. For example, you might have an object scalar representing a comment, with
its creator, content, and any other desired attributes.</p><div class="language-toml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#d6deeb;--prism-background-color:#011627"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-toml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#d6deeb"><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token table class-name" style="color:rgb(255, 203, 139)">service.entities.fields</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">name</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"usage"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">scalar</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"Object"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">exclude_from_input</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token string" style="color:rgb(173, 219, 103)">"CreateOne"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">required</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 88, 116)">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">fields</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"> </span><span class="token key property" style="color:rgb(128, 203, 196)">name</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"prompt_tokens"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token key property" style="color:rgb(128, 203, 196)">scalar</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"Int"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token key property" style="color:rgb(128, 203, 196)">required</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 88, 116)">true</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"> </span><span class="token key property" style="color:rgb(128, 203, 196)">name</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"completion_tokens"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token key property" style="color:rgb(128, 203, 196)">scalar</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"Int"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token key property" style="color:rgb(128, 203, 196)">required</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 88, 116)">true</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"> </span><span class="token key property" style="color:rgb(128, 203, 196)">name</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"total_tokens"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token key property" style="color:rgb(128, 203, 196)">scalar</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"Int"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token key property" style="color:rgb(128, 203, 196)">required</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 88, 116)">true</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="list-options">List Options<a class="hash-link" href="#list-options" title="Direct link to heading">​</a></h3><p>Lists or Arrays are one of the most commonly used data types in programming languages. Similarly, in Subgraph, lists can be defined as an array of a certain data types. This allows for a collection of values
to be returned as a single response. Lists can be defined in the configuration file by marking the field as a list (as shown below). Lists can also be nested inside objects, allowing for more complex data structures to be
represented. Lists are useful when you need to return multiple instances of a certain data type, such as a list of products or a list of blog posts.</p><div class="language-toml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#d6deeb;--prism-background-color:#011627"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-toml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#d6deeb"><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token table class-name" style="color:rgb(255, 203, 139)">service.entities.fields</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">name</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"messages"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">scalar</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"Object"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">required</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 88, 116)">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">list</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 88, 116)">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">fields</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token key property" style="color:rgb(128, 203, 196)">name</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"role"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token key property" style="color:rgb(128, 203, 196)">scalar</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"String"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token key property" style="color:rgb(128, 203, 196)">required</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 88, 116)">true</span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token key property" style="color:rgb(128, 203, 196)">name</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"content"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token key property" style="color:rgb(128, 203, 196)">scalar</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"String"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token key property" style="color:rgb(128, 203, 196)">required</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 88, 116)">true</span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">exclude_from_output</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 88, 116)">true</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="new-features">New Features<a class="hash-link" href="#new-features" title="Direct link to heading">​</a></h3><ul><li>HTTP Data Source - Easily map a HTTP API into this GraphQL API.</li><li>Update One Resolver - Update Mongo documents or send HTTP Put/Patch Request</li><li>Objects and Lists - Support for more complex data structures.</li><li>Exclude From Input/Output - Allows fields to be shared or mapped exclusivly to resolvers input/output.</li><li>Environment Variable Support - Use environment variables directly inside your config with the <code>$</code> suffix.</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-chat-gpt-config">The Chat GPT Config<a class="hash-link" href="#the-chat-gpt-config" title="Direct link to heading">​</a></h2><p>Let's get down to the nitty gritty and hit the Chat GPT Completions endpoint with a Subgraph Service.</p><ol><li>Download the latest <a href="https://www.github.com/the-devoyage/subgraph/releases" target="_blank" rel="noopener noreferrer">release</a> of subgraph.</li><li>Get an Open AI API Key and set it as an environment variable.</li></ol><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#d6deeb;--prism-background-color:#011627"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#d6deeb"><span class="token plain">EXPORT </span><span class="token assign-left variable" style="color:rgb(214, 222, 235)">OPENAI_KEY</span><span class="token operator" style="color:rgb(127, 219, 202)">=</span><span class="token plain">paste_key_here</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ol start="3"><li><p>Download the <a href="https://github.com/The-Devoyage/subgraph/blob/2209c412f3f4fd0664a7963edba1d9830ec8e50c/examples/chat-gpt.toml" target="_blank" rel="noopener noreferrer">Chat GPT Service Config Example</a></p></li><li><p>Start the API.</p></li></ol><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#d6deeb;--prism-background-color:#011627"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#d6deeb"><span class="token plain">./subgraph -c ./chat-gpt.toml -p 5012</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ol start="5"><li>Check out the Sandbox and send some mutations!</li></ol><p>Open browser and navigate to the port that the service was started on. <code>http://localhost:5012</code></p><p><img loading="lazy" src="https://res.cloudinary.com/the-devoyage/image/upload/v1680991221/Screenshot_from_2023-04-08_17-00-02_xidwxl.png" alt="Sandbox" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="whats-next">What's Next?<a class="hash-link" href="#whats-next" title="Direct link to heading">​</a></h2><p>There is still a lot of work in order to get to v0.1.0 - Error handling, SQL Compatibility, Various Scalar Support, GraphQL Subscriptions... just to name a few.</p><p>So keep tuned, as v0.0.8 is under way.</p><p><a href="https://www.github.com/the-devoyage/subgraph" target="_blank" rel="noopener noreferrer">@the-devoyage/subgraph</a> - Check out the repo, grab a ticket, let's build.</p><div class="alert alert--info margin-vert--lg" style="display:flex;justify-content:space-between;flex-direction:column"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--lg" href="https://medium.com/@thedevoyage"><img alt="Nick McLean Profile Image" src="https://cdn-images-1.medium.com/fit/c/63/63/1*TY45PiqMrWiUkivbhmp-Sw.jpeg"></a><div class="avatar__intro"><div class="avatar__name">Nick McLean</div><small class="avatar__subtitle padding-bottom--md">Thanks for following along. If you would like to keep up to date make sure to check in frequently and/or follow us below!</small><div><a href="https://medium.com/@thedevoyage" target="_blank" rel="noopener noreferrer"><button class="button button--primary margin-right--md">Medium</button></a><a href="https://twitter.com/thedevoyage" target="_blank" rel="noopener noreferrer"><button class="button button--primary margin-right--md">Twitter</button></a><a href="https://thedevoyage.slack.com" target="_blank" rel="noopener noreferrer"><button class="button button--primary margin-right--md">Slack</button></a></div></div></div></div>]]></content:encoded>
            <category>subgraph</category>
        </item>
        <item>
            <title><![CDATA[Subgraph v0.0.5 - API vs. Car - Startups, What is an API and Why Generate?]]></title>
            <link>https://www.thedevoyage.com/blog/subgraph-v0.0.5-api-vs-car</link>
            <guid>subgraph-v0.0.5-api-vs-car</guid>
            <pubDate>Sun, 26 Feb 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Hello all, and thanks for joining.]]></description>
            <content:encoded><![CDATA[<p>Hello all, and thanks for joining.</p><p>Today, we start a conversation about what an API does at a basic level while talking about the newest release of project <code>Subgraph</code>, a GraphQL API Generator built with Rust.</p><p>Your next startup idea will most likely resolve around tech; It's 2023! So before you set out to hire that next developer, it is important that you might understand some basics about the empire you are creating.</p><p><img loading="lazy" src="https://res.cloudinary.com/the-devoyage/image/upload/v1677423235/The-Devoyage/API_VS_CAR_keho8m.png" alt="API Vs Car" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="api-vs-car-yes-a-car">API vs Car, yes a Car<a class="hash-link" href="#api-vs-car-yes-a-car" title="Direct link to heading">​</a></h2><p>As you may already know, data is your most valuable asset.</p><p>I am not saying it would be fun, but a company can recover from a broken application. Loss of code, bugs, and crashes can (and will) happen. But nothing is worse than if you loose the data itself.</p><p>Realizing this, we can compare an API to a Car. Yes, that shiny mode of transportation that gets you everywhere. The core job of an API is to move data.</p><p>Not unlike a car, as long as data can safely get from point A to point B, the API has done it's job. Meaning, that for most cases, any car will do.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="the-jobs-of-an-api">The Jobs of an API<a class="hash-link" href="#the-jobs-of-an-api" title="Direct link to heading">​</a></h3><p>In most situations, your car is not that different from my car. In fact, they are almost identical aside from some minor bells and whistles.</p><p>At a high overview, the job of an API is pretty basic, move data! There are four basic reasons for data transportation and they boil down to the acronym, "CRUD".</p><p>"CRUD" stands for Create -- Read -- Update -- Delete. The basic responsibilities of an API.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="create---the-factory">Create - The Factory<a class="hash-link" href="#create---the-factory" title="Direct link to heading">​</a></h4><p>Hop in your car, and let's take a trip down to the industrial district. Grab some supplies because we are going to create something new at the factory.</p><p>Just like a car might transport raw materials to the factory in order to create something new, we can send data from our shiny new website to the database (through the API) to create a new asset in our database.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="read---the-grocery-run">Read - The Grocery Run<a class="hash-link" href="#read---the-grocery-run" title="Direct link to heading">​</a></h4><p>Grab your reusable grocery bags and shopping list, it's time to do the weekly food run.</p><p>Your users will expect to be able to view data from the database. When your website needs to get some data, you will request that data through the API. It's just like that weekly grocery run that keeps us all fed and happy.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="update---the-shop">Update - The Shop<a class="hash-link" href="#update---the-shop" title="Direct link to heading">​</a></h4><p>My new bike has broken. Load it into the trunk and take it to the shop for me!</p><p>It's not enough that you can create or read items from the database. You are going to have to update these items, just like we fixed my bike by adding a nice new wicker basket to the front.</p><p>The API is going to be responsible to take those update instructions all the way from your website to the database. That way, you can edit those assets you have created.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="delete---the-dump">Delete - The Dump<a class="hash-link" href="#delete---the-dump" title="Direct link to heading">​</a></h4><p>Each spring, my family does a clean out -- Spring Cleaning. We load things we don't need into our vehicle and take them on down to the dump (or donation facility)!</p><p>Your website will need to do something very similar. It will send some data through the API, which instructs the database to delete some items.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="subgraph---a-graphql-api-generator">Subgraph - A GraphQL API Generator<a class="hash-link" href="#subgraph---a-graphql-api-generator" title="Direct link to heading">​</a></h2><p>The job of an API is to transfer data. A shiny new car is nice, but a clunker can also get you from point A to point B. An API is a vehicle that can be built, updated, or replaced as needed!</p><p>Many times, we sit down with our development team to build this vehicle (API) part by part, piece by piece, from the ground up. Only to realize we are building the same thing over and over, solving the same issues the same way again and again.</p><p>Since these basic tasks of an API are mainly universal, an API Generator such as Project <code>Subgraph</code> might be a solution that helps you to build your next API.</p><p>Currently, the project is a proof of concept. Define a simple configuration to run the API. Instant data transportation in a classy, speedy, and modern vehicle.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="define-to-run">Define to Run<a class="hash-link" href="#define-to-run" title="Direct link to heading">​</a></h3><p>The goal is simple -- Since APIs are generally similar, we should be able to generate an API based on the data we currently have or want to have in our database.</p><p>We define a simple configuration, and the generator handles the creation of the four main responsibilities of an API - Create, Read, Update, Delete.</p><p>Let's take a look at the ~20 lines of code needed to start your next API.</p><ol><li>Define The Config</li></ol><p>Name your service, connect your database, and define your data. Simple.</p><p>Below, my API will be able to Create, Read, Update, and Delete <code>Restaurants</code>. Each <code>Restaurant</code> has two data points including a <code>name</code> and a <code>rating</code>. It's pretty simple but with this config I'll be able to perform the four responsibilities of an API.</p><div class="language-toml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#d6deeb;--prism-background-color:#011627"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-toml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#d6deeb"><span class="token comment" style="color:rgb(99, 119, 119);font-style:italic"># Name Your Service</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token table class-name" style="color:rgb(255, 203, 139)">service</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">service_name</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"Restaurants"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token comment" style="color:rgb(99, 119, 119);font-style:italic"># Connect your Mongo DB</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token table class-name" style="color:rgb(255, 203, 139)">service.database_config</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">mongo_uri</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"mongodb://user:pass@127.0.0.1:27017/db"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">mongo_db</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"myDb"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token comment" style="color:rgb(99, 119, 119);font-style:italic"># Describe Your Data</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token table class-name" style="color:rgb(255, 203, 139)">service.entities</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">name</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"Restaurant"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token table class-name" style="color:rgb(255, 203, 139)">service.entities.fields</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">name</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"name"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">scalar</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"String"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">required</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 88, 116)">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token table class-name" style="color:rgb(255, 203, 139)">service.entities.fields</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">name</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"rating"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">scalar</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"Int"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">required</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 88, 116)">true</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ol start="2"><li>Starting the API</li></ol><p>Spinning this bad boy up is a One Line Command for your Developers.</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#d6deeb;--prism-background-color:#011627"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#d6deeb"><span class="token plain">subgraph --config ./my-config.toml --port </span><span class="token number" style="color:rgb(247, 140, 108)">5000</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="v005---subgraph">v0.0.5 - Subgraph<a class="hash-link" href="#v005---subgraph" title="Direct link to heading">​</a></h3><p>Thanks for checking out this crazy simple description of an API and the Subgraph API Generator!</p><p>Version <code>v0.0.5</code> is officially released and while it is still a proof of concept, it provides some new features that take us one step closer to an official release.</p><p>In this new version, we are able to define configuration to block or allow access by domain! In tech terms, we can define some simple CORS Configuration.</p><ul><li>Specify Allowed HTTP Methods</li><li>Declare Allowed Origins</li><li>Allow Specific Headers</li></ul><p>Aside from these tech terms, it allows you to lock your server down from a security prospective. It's a small step forward for project <code>Subgraph</code> and I am happy to share the progress with you.</p><hr><p>If you are interested in <a href="https://www.github.com/the-devoyage/subgraph" target="_blank" rel="noopener noreferrer">Checking Out The Code</a>, it's open source! Download it to try it, view it, or submit your contributions as the project grows.</p><p>Thanks All!</p><div class="alert alert--info margin-vert--lg" style="display:flex;justify-content:space-between;flex-direction:column"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--lg" href="https://medium.com/@thedevoyage"><img alt="Nick McLean Profile Image" src="https://cdn-images-1.medium.com/fit/c/63/63/1*TY45PiqMrWiUkivbhmp-Sw.jpeg"></a><div class="avatar__intro"><div class="avatar__name">Nick McLean</div><small class="avatar__subtitle padding-bottom--md">Thanks for following along. If you would like to keep up to date make sure to check in frequently and/or follow us below!</small><div><a href="https://medium.com/@thedevoyage" target="_blank" rel="noopener noreferrer"><button class="button button--primary margin-right--md">Medium</button></a><a href="https://twitter.com/thedevoyage" target="_blank" rel="noopener noreferrer"><button class="button button--primary margin-right--md">Twitter</button></a><a href="https://thedevoyage.slack.com" target="_blank" rel="noopener noreferrer"><button class="button button--primary margin-right--md">Slack</button></a></div></div></div></div>]]></content:encoded>
            <category>subgraph</category>
        </item>
        <item>
            <title><![CDATA[Subgraph v0.0.4 - Versatile Typings for a GraphQL API Generator]]></title>
            <link>https://www.thedevoyage.com/blog/subgraph-v0.0.4-versatile-typings</link>
            <guid>subgraph-v0.0.4-versatile-typings</guid>
            <pubDate>Mon, 20 Feb 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Hello all! Thanks for joining!]]></description>
            <content:encoded><![CDATA[<p>Hello all! Thanks for joining!</p><p>Today, the goal is to share the idea of versatile typings for an API Generator.</p><p>In version <code>v0.0.4</code> of the <code>subgraph</code> API Generator Project, I am happy to introduce the (mongo) Object Id Scalar. This means it's now possible to instantly start an API <code>Subgraph</code> Instance with the capabilities to find Mongo Documents by their Object ID! One simple step forward for this POC GraphQL API Generator written in Rust.</p><p>In case you are new to <code>Project Subgraph</code>, "Define to Run", is the motto. Define a simple configuration, and start the API. The code does the rest by generating resolvers and database connections -- An instantly generated API.</p><p><img loading="lazy" src="https://res.cloudinary.com/the-devoyage/image/upload/v1676924961/The-Devoyage/INTUITIVE_SCALARS_4_ttaqvh.png" alt="GraphQL Versatile Typings" class="img_ev3q"></p><p>So, what kind of scalars are we including in this API Generator? Let's take a look.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="versatile-typings">Versatile Typings<a class="hash-link" href="#versatile-typings" title="Direct link to heading">​</a></h2><p>Creating an API Generator needs to be versatile, yet simple. Two steps simple.</p><ol><li>Define the entities.</li><li>Let the code do it's job to create the API.</li></ol><p>This means that the scalar type of each entity versatile enough to cover many circumstances.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="the-typings">The Typings<a class="hash-link" href="#the-typings" title="Direct link to heading">​</a></h3><p>With <code>Subgraph v0.0.4</code> we have a simple set of options, as the project is still a proof of concept in its infancy. There are 4, mostly primitive, scalars to define entities.</p><ul><li>Object ID (Mongo)</li><li>String</li><li>Int</li><li>Boolean</li></ul><p>As the project ramps up, more versatile options will be included.</p><ul><li>Email</li><li>Date</li><li>DateTime</li><li>Password</li><li>Phone</li><li>Objects</li><li>Other Entities</li><li>... the list goes on!</li></ul><p>For now, we can establish some base practices on implementing new scalars before diving into the deep end.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="defining-an-entity">Defining an Entity<a class="hash-link" href="#defining-an-entity" title="Direct link to heading">​</a></h3><p>I'll say it once, and I'll say it again. Define to Run is the motto.</p><p>Defining an entity is the almost the only thing you need to do in order to start the API, aside from declaring some database configuration.</p><p>Below, we define an entity for our <code>Beers</code> service. It's the weekend somewhere.</p><p>The <code>Beer</code> entity has three properties including, <code>name</code>, <code>IBU</code>, and <code>inStock</code>. The ability to define more than one entity is just as simple, if so chosen.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#d6deeb;--prism-background-color:#011627"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#d6deeb"><span class="token plain">[service]</span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">...</span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">[[service.entities]]</span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">name = "Beer"</span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">[[service.entities.fields]]</span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">name = "_id"</span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">scalar = "ObjectID"</span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">required = true</span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">[[service.entities.fields]]</span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">name = "name"</span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">scalar = "String"</span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">required = true</span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">[[service.entities.fields]]</span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">name = "IBU"</span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">scalar = "Int"</span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">required = false</span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">[[service.entities.fields]]</span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">name = "inStock"</span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">scalar = "Boolean"</span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">required = true</span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">[[service.entities]]</span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">...</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>In about 50 lines of code, this little API can be started! Compare that to the hundreds or thousands of lines that might be written for a completely custom API that does nearly the exact same thing.</p><p>Now that these couple lines have been written into a configuration file, the API can be spun up and queried.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="spin-it-up">Spin It Up<a class="hash-link" href="#spin-it-up" title="Direct link to heading">​</a></h3><p>Once the entities are defined, the hard part is done. Starting the service can be done through a simple CLI Command.</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#d6deeb;--prism-background-color:#011627"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#d6deeb"><span class="token plain">subgraph --config ./config.toml --port </span><span class="token number" style="color:rgb(247, 140, 108)">5000</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>And like that... a brand new Beer API has been born! Checkout the sandbox hosted at the defined port, <code>http://localhost:5000</code>, to sample your server.</p><hr><p>Thanks for checking out the <a href="https://www.github.com/the-devoyage/subgraph" target="_blank" rel="noopener noreferrer">Repo</a>, and following along with this proof of concept. If you are interested in contributing or have some ideas, feel free to share on the <code>issues</code> tab.</p><p>Version <code>v0.0.5</code> is on it's way, with configurable CORS settings. If you like the project or want to keep up to date, follow along to get notifications of future releases.</p><div class="alert alert--info margin-vert--lg" style="display:flex;justify-content:space-between;flex-direction:column"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--lg" href="https://medium.com/@thedevoyage"><img alt="Nick McLean Profile Image" src="https://cdn-images-1.medium.com/fit/c/63/63/1*TY45PiqMrWiUkivbhmp-Sw.jpeg"></a><div class="avatar__intro"><div class="avatar__name">Nick McLean</div><small class="avatar__subtitle padding-bottom--md">Thanks for following along. If you would like to keep up to date make sure to check in frequently and/or follow us below!</small><div><a href="https://medium.com/@thedevoyage" target="_blank" rel="noopener noreferrer"><button class="button button--primary margin-right--md">Medium</button></a><a href="https://twitter.com/thedevoyage" target="_blank" rel="noopener noreferrer"><button class="button button--primary margin-right--md">Twitter</button></a><a href="https://thedevoyage.slack.com" target="_blank" rel="noopener noreferrer"><button class="button button--primary margin-right--md">Slack</button></a></div></div></div></div>]]></content:encoded>
            <category>subgraph</category>
        </item>
        <item>
            <title><![CDATA[Subgraph v0.0.3 - Reusable Resolvers with a GraphQL API Generator Built in Rust]]></title>
            <link>https://www.thedevoyage.com/blog/subgraph-v0.0.3-reusable-resolvers</link>
            <guid>subgraph-v0.0.3-reusable-resolvers</guid>
            <pubDate>Sat, 04 Feb 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Hello all! Thanks for joining.]]></description>
            <content:encoded><![CDATA[<p>Hello all! Thanks for joining.</p><p>Today I'd like to share a quick update for <code>@the-devoyage/subgraph</code>, a GraphQL API Generator with the goal of simplicity.</p><p>Define to run is the motto so far, which references the ease of running this API Generator. Define the schema to run the API. It should be that easy to start an API up.</p><p>In version <code>v0.0.3</code> we are adding the ability to Find Many which is one of the reusable resolvers that is created for you when you start the service.</p><p><img loading="lazy" src="https://res.cloudinary.com/the-devoyage/image/upload/v1675543551/The-Devoyage/CRUD_GraphQL_aaooqr.png" alt="GraphQL Resolvers CRUD" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="reusable-resolvers">Reusable Resolvers<a class="hash-link" href="#reusable-resolvers" title="Direct link to heading">​</a></h2><p>The idea of an API Generator is to make creating a standardized API easy. Many parts of creating an API can be automated, including the creation of resolvers.</p><p>The core of an API revolves around CRUD operations (Create, Read, Update, Delete) which can easily be automated considering there are really not many variations to consider.</p><p>The Devoyage's <code>subgraph</code> project (The API Generator) has the goal of automating a variety of these operations for each defined entity.</p><ul><li>Find One/Many</li><li>Create One/Many</li><li>Delete One/Many</li><li>Update One/Many</li></ul><p>This means there will be a total of 8 reusable resolvers created for each defined entity as this project proceeds.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-new-resolver">The New Resolver<a class="hash-link" href="#the-new-resolver" title="Direct link to heading">​</a></h2><p>Version <code>v0.0.3</code> takes a step at closing the gap to including all 8 of these automated resolvers by including the <code>Find Many</code> resolver. Let's take a look!</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="define-the-entity-or-entities">Define The Entity (or Entities)<a class="hash-link" href="#define-the-entity-or-entities" title="Direct link to heading">​</a></h3><p>First define the entity in the config file. Remember the motto - "Define to Run".</p><div class="language-toml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#d6deeb;--prism-background-color:#011627"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-toml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#d6deeb"><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token table class-name" style="color:rgb(255, 203, 139)">service</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">service_name</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"pets"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token table class-name" style="color:rgb(255, 203, 139)">service.database_config</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">mongo_uri</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"mongodb://user:pass@127.0.0.1:27017/db"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">mongo_db</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"myDb"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token table class-name" style="color:rgb(255, 203, 139)">service.entities</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">name</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"Dog"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token table class-name" style="color:rgb(255, 203, 139)">service.entities.database_config</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">mongo_collection</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"dogs"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token table class-name" style="color:rgb(255, 203, 139)">service.entities.fields</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">name</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"_id"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">scalar</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"ObjectID"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">required</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 88, 116)">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token table class-name" style="color:rgb(255, 203, 139)">service.entities.fields</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">name</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"name"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">scalar</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"String"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">required</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 88, 116)">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token table class-name" style="color:rgb(255, 203, 139)">service.entities.fields</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">name</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"weight"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">scalar</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(173, 219, 103)">"Int"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token key property" style="color:rgb(128, 203, 196)">required</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">=</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 88, 116)">false</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="run-the-service">Run The service<a class="hash-link" href="#run-the-service" title="Direct link to heading">​</a></h3><p>Step 1 is easy. Step 2 is even easier. Start the service.</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#d6deeb;--prism-background-color:#011627"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#d6deeb"><span class="token plain">subgraph --config ./config.toml --port </span><span class="token number" style="color:rgb(247, 140, 108)">5011</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="the-find-many-resolver">The Find Many Resolver<a class="hash-link" href="#the-find-many-resolver" title="Direct link to heading">​</a></h3><p>Check out the schema, the find many resolver is now included as a choice for querying your new API.</p><div class="language-graphql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#d6deeb;--prism-background-color:#011627"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-graphql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#d6deeb"><span class="token keyword" style="color:rgb(127, 219, 202)">type</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(255, 203, 139)">Query</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">  </span><span class="token attr-name" style="color:rgb(173, 219, 103);font-style:italic">get_dogs</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token attr-name" style="color:rgb(173, 219, 103);font-style:italic">get_dogs_input</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"> </span><span class="token property" style="color:rgb(128, 203, 196)">get_dogs_input</span><span class="token operator" style="color:rgb(127, 219, 202)">!</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token class-name" style="color:rgb(255, 203, 139)">Dog</span><span class="token operator" style="color:rgb(127, 219, 202)">!</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token operator" style="color:rgb(127, 219, 202)">!</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain">  </span><span class="token operator" style="color:rgb(127, 219, 202)">...</span><span class="token fragment function" style="color:rgb(130, 170, 255)">resolvers</span><span class="token plain"></span><br></span><span class="token-line" style="color:#d6deeb"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><hr><p>It's a small step toward the goal and I am glad you are here to follow along. If you're interested in checking out the code or trying out this proof of concept, check out the <a href="https://www.github.com/the-devoyage/subgraph" target="_blank" rel="noopener noreferrer">Subgraph Project</a> on GitHub!</p><div class="alert alert--info margin-vert--lg" style="display:flex;justify-content:space-between;flex-direction:column"><div class="avatar"><a class="avatar__photo-link avatar__photo avatar__photo--lg" href="https://medium.com/@thedevoyage"><img alt="Nick McLean Profile Image" src="https://cdn-images-1.medium.com/fit/c/63/63/1*TY45PiqMrWiUkivbhmp-Sw.jpeg"></a><div class="avatar__intro"><div class="avatar__name">Nick McLean</div><small class="avatar__subtitle padding-bottom--md">Thanks for following along. If you would like to keep up to date make sure to check in frequently and/or follow us below!</small><div><a href="https://medium.com/@thedevoyage" target="_blank" rel="noopener noreferrer"><button class="button button--primary margin-right--md">Medium</button></a><a href="https://twitter.com/thedevoyage" target="_blank" rel="noopener noreferrer"><button class="button button--primary margin-right--md">Twitter</button></a><a href="https://thedevoyage.slack.com" target="_blank" rel="noopener noreferrer"><button class="button button--primary margin-right--md">Slack</button></a></div></div></div></div>]]></content:encoded>
            <category>subgraph</category>
        </item>
    </channel>
</rss>